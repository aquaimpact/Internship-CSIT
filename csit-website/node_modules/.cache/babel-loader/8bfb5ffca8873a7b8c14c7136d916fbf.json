{"ast":null,"code":"var _jsxFileName = \"G:\\\\INTERNSHIPFILES\\\\CodingFolder\\\\csit-website\\\\src\\\\Components\\\\Timelines\\\\TimelineChart.js\";\nimport React from 'react'; // import Timeline from 'react-image-timeline';\n\nimport { VerticalTimeline, VerticalTimelineElement } from 'react-vertical-timeline-component';\nimport './style.css';\nimport TimelineTable from '../Tables/Timeline/TimelineTablelineTable';\nimport Moment from 'moment';\nimport { extendMoment } from 'moment-range';\nconst moment = extendMoment(Moment);\n\nclass TimelineChart extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      movements: [],\n      retrieved: []\n    };\n  }\n\n  getMovements(id) {\n    fetch(`http://localhost:8080/getMovementbyID?IDs=${id}`).then(r => r.json()).then(data => {\n      this.setState({\n        movements: data\n      });\n      data.forEach(x => {\n        this.getPeople(x.id);\n      });\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  componentDidMount() {\n    this.getMovements(this.props.UID);\n  }\n\n  convertSQLDate(startDate1, endDate, type = undefined) {\n    if (startDate1 !== undefined && endDate !== undefined) {\n      var date = new Date(startDate1);\n      var date2 = date.toString().split(\" \");\n      var time = date2[4].split(\":\");\n      var date1 = new Date(endDate);\n      var date21 = date1.toString().split(\" \");\n      var time1 = date21[4].split(\":\");\n      let str;\n\n      if (type === \"header\") {\n        str = time[0] + \":\" + time[1] + \" - \" + time1[0] + \":\" + time1[1];\n      } else {\n        str = date2[2] + \" \" + date2[1] + \", \" + time[0] + \":\" + time[1] + \" - \" + time1[0] + \":\" + time1[1];\n      }\n\n      return str;\n    } // return date2[1]\n\n  }\n\n  getPeople(id) {\n    fetch(`http://localhost:8080/getPeopleTiming?IDs=${id}`).then(r => r.json()).then(data => {\n      this.setState({\n        retrieved: [...this.state.retrieved, data]\n      });\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  render() {\n    let count = 0;\n    let events = this.state.movements.map(x => {\n      let range = moment.range(x.datetimeEntered, x.datetimeLeft);\n      let tableprops;\n\n      if (this.state.retrieved[count] != undefined) {\n        tableprops = this.state.retrieved[count].map(data => {\n          let range2 = moment.range(data.datetimeEntered, data.datetimeLeft);\n          let minIntersect = range.intersect(range2).diff('minute');\n          return {\n            name: data.firstName + \" \" + data.lastName,\n            datetime: this.convertSQLDate(data.datetimeEntered, data.datetimeLeft),\n            intersection: minIntersect\n          };\n        });\n      }\n\n      count += 1;\n      return /*#__PURE__*/React.createElement(VerticalTimelineElement, {\n        className: \"vertical-timeline-element--work\",\n        date: this.convertSQLDate(x.datetimeEntered, x.datetimeLeft),\n        iconStyle: {\n          background: 'rgb(33, 150, 243)',\n          color: '#fff'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"h4\", {\n        className: \"vertical-timeline-element-subtitle\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }\n      }, x.locationShortaddress), /*#__PURE__*/React.createElement(TimelineTable, {\n        tableprops: tableprops,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }\n      }));\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        backgroundColor: \"#E3E3E3\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(VerticalTimeline, {\n      layout: \"1-column\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }\n    }, events));\n  }\n\n}\n\nexport default TimelineChart;","map":{"version":3,"sources":["G:/INTERNSHIPFILES/CodingFolder/csit-website/src/Components/Timelines/TimelineChart.js"],"names":["React","VerticalTimeline","VerticalTimelineElement","TimelineTable","Moment","extendMoment","moment","TimelineChart","Component","constructor","props","state","movements","retrieved","getMovements","id","fetch","then","r","json","data","setState","forEach","x","getPeople","catch","err","console","log","componentDidMount","UID","convertSQLDate","startDate1","endDate","type","undefined","date","Date","date2","toString","split","time","date1","date21","time1","str","render","count","events","map","range","datetimeEntered","datetimeLeft","tableprops","range2","minIntersect","intersect","diff","name","firstName","lastName","datetime","intersection","background","color","locationShortaddress","backgroundColor"],"mappings":"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","sourcesContent":["import React from 'react'\r\n// import Timeline from 'react-image-timeline';\r\nimport { VerticalTimeline, VerticalTimelineElement }  from 'react-vertical-timeline-component';\r\nimport './style.css'\r\nimport TimelineTable from '../Tables/Timeline/TimelineTablelineTable'\r\nimport Moment from 'moment';\r\nimport { extendMoment } from 'moment-range';\r\n \r\nconst moment = extendMoment(Moment);\r\n\r\n\r\nclass TimelineChart extends React.Component{\r\n\r\n    constructor(props){\r\n        \r\n        super(props)\r\n        this.state = {\r\n            movements: [],\r\n            retrieved: [],\r\n        }\r\n\r\n    }\r\n\r\n    getMovements(id){\r\n        fetch(`http://localhost:8080/getMovementbyID?IDs=${id}`).then(r => r.json()).then(data => {\r\n            this.setState({movements:data})\r\n            data.forEach(x => {\r\n                this.getPeople(x.id)\r\n            })\r\n        }).catch(err => {console.log(err)})\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.getMovements(this.props.UID)\r\n    }\r\n\r\n    convertSQLDate(startDate1, endDate, type = undefined){\r\n        \r\n        if(startDate1 !== undefined && endDate !== undefined){\r\n            var date = new Date(startDate1)\r\n            var date2 = date.toString().split(\" \")\r\n            var time = date2[4].split(\":\")\r\n    \r\n            var date1 = new Date(endDate)\r\n            var date21 = date1.toString().split(\" \")\r\n            var time1 = date21[4].split(\":\")\r\n            \r\n            let str\r\n            if(type === \"header\"){\r\n                str = time[0] + \":\"+ time[1] + \" - \" + time1[0] + \":\" + time1[1]\r\n            }\r\n            else{\r\n                str = date2[2] + \" \" + date2[1] + \", \" + time[0] + \":\"+ time[1] + \" - \" + time1[0] + \":\" + time1[1]\r\n            }\r\n           \r\n            return str\r\n        }\r\n        // return date2[1]\r\n    }\r\n\r\n    getPeople(id)\r\n    {\r\n        fetch(`http://localhost:8080/getPeopleTiming?IDs=${id}`).then(r => r.json()).then((data) => {this.setState({ retrieved: [...this.state.retrieved, data]})}).catch(err => {console.log(err)})\r\n    }\r\n\r\n    render(){\r\n\r\n        let count = 0\r\n\r\n        let events = this.state.movements.map(x => {\r\n\r\n            let range = moment.range(x.datetimeEntered, x.datetimeLeft)\r\n\r\n            let tableprops\r\n            if(this.state.retrieved[count] != undefined){\r\n                tableprops = this.state.retrieved[count].map(data => {\r\n\r\n                    let range2 = moment.range(data.datetimeEntered, data.datetimeLeft)\r\n                    let minIntersect = range.intersect(range2).diff('minute')\r\n\r\n                    return({\r\n                        name: data.firstName + \" \" + data.lastName,\r\n                        datetime: this.convertSQLDate(data.datetimeEntered, data.datetimeLeft),\r\n                        intersection: minIntersect\r\n                    })\r\n                })\r\n            }\r\n           \r\n            count += 1\r\n            return(\r\n                <VerticalTimelineElement\r\n                    className=\"vertical-timeline-element--work\"\r\n                    date={this.convertSQLDate(x.datetimeEntered, x.datetimeLeft)}\r\n                    iconStyle={{ background: 'rgb(33, 150, 243)', color: '#fff' }}>\r\n                    {/* <h3 className=\"vertical-timeline-element-title\">{x.locationShortaddress}</h3> */}\r\n                    <h4 className=\"vertical-timeline-element-subtitle\">{x.locationShortaddress}</h4>\r\n                    <TimelineTable tableprops={tableprops}/>\r\n                </VerticalTimelineElement>\r\n            )\r\n        })\r\n\r\n        return(\r\n            <div style={{backgroundColor:\"#E3E3E3\"}}>\r\n                <VerticalTimeline layout=\"1-column\">\r\n                    {events}\r\n                </VerticalTimeline>\r\n            </div>\r\n        )\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default TimelineChart"]},"metadata":{},"sourceType":"module"}