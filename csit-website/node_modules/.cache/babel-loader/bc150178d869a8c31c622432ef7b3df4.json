{"ast":null,"code":"var _jsxFileName = \"G:\\\\INTERNSHIPFILES\\\\CodingFolder\\\\csit-website\\\\src\\\\Components\\\\Navbar.js\";\nimport React, { useRef } from 'react';\nimport * as rb from 'react-bootstrap';\nimport { ReactComponent as Logo } from \"@svgr/webpack?-svgo,+titleProp,+ref!../Imgs/upload.svg\";\nimport Papa from 'papaparse';\nimport axios from 'axios';\nimport Graph from './Graphs/Graphs';\nimport Table from './Tables/Table';\nimport Table2 from './Tables/Table2';\nimport ProfileModal from './ProfileModal';\nimport MainMap from '../Components/MainMap'; // import Chip from '@material-ui/core/Chip';\n\nclass TopNavBar extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.myCallback = dataFromChild => {\n      // console.log(\"Data1:\" + dataFromChild)\n      this.setState({\n        CCID: dataFromChild\n      });\n    };\n\n    this.myCallback2 = dataFromChild => {\n      // console.log(\"Data2:\" + dataFromChild)\n      this.setState({\n        fromCCID: dataFromChild\n      });\n    };\n\n    this.databackTable = dataFromChild => {\n      this.setState({\n        profileModal: dataFromChild\n      });\n      this.setState({\n        showSelection2: true\n      });\n    };\n\n    this.toCCClicked = () => {\n      let IDs = [];\n\n      if (this.state.datas.length > 0) {\n        let placename = this.state.datas[0].locationShortaddress; // console.log(this.state.CCID)\n\n        this.state.datas.map(x => {\n          for (var data of this.state.CCID) {\n            // console.log(data)\n            if (x.peopleProfileId == data) {\n              IDs.push(x.peopleProfileId);\n            }\n          }\n        }); // console.log(\"TO: \" + IDs)\n\n        let newItem = { ...this.state.CloseContacts,\n          [placename]: IDs\n        };\n        this.setState({\n          CloseContacts: newItem\n        });\n      }\n    };\n\n    this.fromCCClicked = () => {\n      if (this.state.datas.length > 0) {\n        let placename = this.state.datas[0].locationShortaddress;\n        let IDs = this.state.CloseContacts[placename].filter(x => this.state.fromCCID.includes(x) === false).map(x => {\n          return x;\n        }); // console.log(\"From: \" + IDs)\n\n        let newItem = { ...this.state.CloseContacts,\n          [placename]: IDs\n        }; // console.log(\"Items:\" + newItem)\n\n        this.setState({\n          CloseContacts: newItem\n        });\n      }\n    };\n\n    this.dataRetrievedMap = dataFromChild => {\n      this.setState({\n        mapData: dataFromChild\n      });\n    };\n\n    this.uploadFile = this.uploadFile.bind(this);\n    this.uploadFile2 = this.uploadFile2.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n    this.handleClick2 = this.handleClick2.bind(this);\n    this.state = {\n      dropDownValue: \"None\",\n      dataList: [\"None\"],\n      suspectCases: [],\n      movements: [],\n      error: false,\n      errorMsg: \"\",\n      showModal: false,\n      filenames: [],\n      series: {},\n      datas: [],\n      placename: \"\",\n      datetime: [],\n      showSelection: false,\n      CCID: [],\n      CloseContacts: {},\n      fromCCID: [],\n      profileModal: {},\n      showSelection2: false,\n      mapData: []\n    };\n  }\n\n  importCompleted() {\n    const list = this.state;\n    this.props.handleData(list);\n    return;\n  } // // Suspect Profile File Upload\n  // handleClick(e) {\n  //     this.refs.fileUploader.click();\n  // }\n  // //Suspect Movement File Upload\n  // handleClick2(e) {\n  //     this.refs.fileUploader2.click();\n  // }\n  // // Suspect File Upload\n  // uploadFile(event) {\n  //     const file = event.target.files[0]\n  //     if(file){\n  //         if (file.name.includes(\"_suspected\")){\n  //             this.setState({filenames:[...this.state.filenames, file.name]})\n  //             const reader = new FileReader();\n  //             reader.onload = () => {\n  //                 // Use reader.result\n  //                 const lols = Papa.parse(reader.result, {header: true, skipEmptyLines: true}, )\n  //                 // console.log(lols.data)\n  //                 // Posting csv data into db\n  //                 // this.postData('\"' + JSON.stringify(lols.data) + '\"')\n  //                 // this.postSuspects(JSON.stringify(lols.data))\n  //                 // Adds names into dropdown\n  //                 this.setState({dataList: [\"All Suspected Cases\", ...lols.data.map(names => names.firstName + \" \" + names.lastName)]})\n  //                 const data = lols.data\n  //                 this.setState({suspectCases: data})\n  //             }\n  //             reader.readAsText(file)\n  //         }\n  //         else{\n  //             this.setState({error:true, errorMsg:\"You have uploaded invalid files! Please rename the file to <filename>_suspected (For suspected cases)\"})\n  //             return\n  //         }\n  //     }\n  // }\n  // // Movement File Upload\n  // uploadFile2(event) {\n  //     const file = event.target.files[0]\n  //     if(file){\n  //         if (file.name.includes(\"_movements\")){\n  //             this.setState({filenames:[...this.state.filenames, file.name]})\n  //             const reader = new FileReader();\n  //             reader.onload = () => {\n  //                 // Use reader.result\n  //                 const lols = Papa.parse(reader.result, {header: true, skipEmptyLines: true}, )\n  //                 // console.log(lols.data)\n  //                 // Posting csv data into db\n  //                 // this.postData('\"' + JSON.stringify(lols.data) + '\"')\n  //                 // this.postMovements(JSON.stringify(lols.data))\n  //                 const data = lols.data\n  //                 this.setState({movements: data})\n  //             }\n  //             reader.readAsText(file)\n  //         }\n  //         else{\n  //             this.setState({error:true, errorMsg:\"You have uploaded invalid files! Please rename the file to <filename>_movement (For suspected case movement)\"})\n  //             return\n  //         }\n  //     }\n  // }\n\n\n  dropdownClicked(text) {\n    this.setState({\n      dropDownValue: text\n    });\n  }\n\n  convertDate(date) {\n    var lol = date;\n    var dateTimeParts = lol.split(' '); // console.log(dateTimeParts)\n\n    var dateParts = dateTimeParts[0].split('/');\n    var timeParts = dateTimeParts[1].split(':');\n    var timeOfDay = dateTimeParts[2];\n\n    if (timeOfDay === \"pm\") {\n      timeParts[0] += 12;\n    } // new Date(year, month, day, hours, minutes, seconds, milliseconds)\n\n\n    var finalDate = new Date(dateParts[2], dateParts[1] - 1, dateParts[0], timeParts[0], timeParts[1]); // console.log(finalDate)\n\n    return finalDate.getTime();\n  } //// ### UNCOMMENT FOR GANTT CHART ###\n  // Gantt Chart Data Formatter from movements and suspects\n\n\n  populateGraph1() {\n    let series2 = [];\n    var string = this.state.mapData;\n    var numbers = string.match(/\\d+/g).map(Number); // console.log(numbers)\n    // console.log(this.state.suspectCases)\n\n    numbers.forEach(x => {\n      let data = [];\n      let m1 = this.state.movements.filter(moves => moves.id === x.toString())[0];\n      let p1 = this.state.suspectCases.filter(sus => sus.id === m1.suspectId)[0];\n      data.push({\n        x: m1.locationShortaddress,\n        y: [this.convertDate(m1.datetimeEntered), this.convertDate(m1.datetimeLeft)]\n      });\n      series2.push({\n        name: p1.firstName + \" \" + p1.lastName,\n        data: data\n      });\n    });\n    console.log(series2); // console.log(this.state.mapData[0])\n    // if(Array.isArray(this.state.mapData)){\n    //     console.log(\"NAY\")\n    //     \n    // }\n    // this.state.suspectCases.forEach(suspect => {\n    //     let data = []\n    //     this.state.movements.filter(moves => moves.suspectId === suspect.id).forEach(movement => {\n    //         data.push(\n    //             {\n    //                 x: movement.locationShortaddress,\n    //                 y: [this.convertDate(movement.datetimeEntered),this.convertDate(movement.datetimeLeft)]\n    //             }\n    //         )\n    //     })\n    //     series2.push(\n    //         {\n    //             name: suspect.firstName + \" \" + suspect.lastName,\n    //             data: data\n    //         }\n    //     )\n    // })\n\n    return series2;\n  }\n\n  convertSQLDate(startDate1, endDate, type = undefined) {\n    if (startDate1 !== undefined && endDate !== undefined) {\n      var date = new Date(startDate1);\n      var date2 = date.toString().split(\" \");\n      var time = date2[4].split(\":\");\n      var date1 = new Date(endDate);\n      var date21 = date1.toString().split(\" \");\n      var time1 = date21[4].split(\":\");\n      let str;\n\n      if (type === \"header\") {\n        str = time[0] + \":\" + time[1] + \" - \" + time1[0] + \":\" + time1[1];\n      } else {\n        str = date2[2] + \" \" + date2[1] + \", \" + time[0] + \":\" + time[1] + \" - \" + time1[0] + \":\" + time1[1];\n      }\n\n      return str;\n    } // return date2[1]\n\n  }\n\n  isEmptyObject(obj) {\n    return !!obj && Object.keys(obj).length === 0 && obj.constructor === Object;\n  }\n\n  compare(arr1, arr2) {\n    if (!arr1 || !arr2) return;\n    let result;\n    arr1.forEach((e1, i) => arr2.forEach(e2 => {\n      if (e1.length > 1 && e2.length) {\n        result = this.compare(e1, e2);\n      } else if (e1 !== e2) {\n        result = false;\n      } else {\n        result = true;\n      }\n    }));\n    return result;\n  }\n\n  render() {\n    let suspected = this.state.dataList.map(sus => /*#__PURE__*/React.createElement(rb.NavDropdown.Item, {\n      eventKey: Math.random(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 56\n      }\n    }, sus));\n    let displaySetting, displaySetting2, seriesdata; //// ### UNCOMMENT FOR GANTT CHART ###\n\n    let test;\n\n    if (this.state.suspectCases.length > 0 && this.state.movements.length > 0) {\n      displaySetting = \"none\";\n      displaySetting2 = \"block\";\n    } else {\n      displaySetting = \"block\";\n      displaySetting2 = \"none\";\n    }\n\n    let graph1, graph11;\n    const that = this;\n    let placename; //// ### UNCOMMENT FOR GANTT CHART ###\n\n    if (this.state.mapData != \"\") {\n      console.log(\"YAY\");\n      test = this.populateGraph1();\n    } //// ### UNCOMMENT FOR GANTT CHART ###\n\n\n    if (test !== undefined) {\n      var options = {\n        options: {\n          chart: {\n            height: 450,\n            type: 'rangeBar',\n            events: {\n              dataPointSelection: function (event, chartContext, config) {\n                // Name of place\n                // console.log(test[config.seriesIndex].data[config.dataPointIndex].x)\n                that.setState({\n                  placename: test[config.seriesIndex].data[config.dataPointIndex].x,\n                  datetime: test[config.seriesIndex].data[config.dataPointIndex].y\n                }); // For the time\n                // console.log(test[config.seriesIndex].data[config.dataPointIndex].y)\n                // For the Name\n                // console.log(test[config.seriesIndex].name)\n\n                placename = test[config.seriesIndex].data[config.dataPointIndex].x;\n                fetch(\"http://localhost:8080/getMovementForDate?placeName=\" + test[config.seriesIndex].data[config.dataPointIndex].x + \"&dates=\" + test[config.seriesIndex].data[config.dataPointIndex].y + \"&personName=\" + test[config.seriesIndex].name).then(response => response.json()).then(data => that.setState({\n                  datas: data\n                })).catch(err => {\n                  console.log(err);\n                });\n              }\n            }\n          },\n          plotOptions: {\n            bar: {\n              horizontal: true,\n              barHeight: '80%'\n            }\n          },\n          xaxis: {\n            type: 'datetime'\n          },\n          stroke: {\n            width: 1\n          },\n          fill: {\n            type: 'solid',\n            opacity: 0.6\n          },\n          legend: {\n            position: 'top',\n            horizontalAlign: 'left'\n          }\n        }\n      };\n      graph1 = /*#__PURE__*/React.createElement(Graph, {\n        display: displaySetting2,\n        options: options.options,\n        series: test,\n        tool: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 396,\n          columnNumber: 22\n        }\n      });\n    } // Creating the COnfirmed Cases\n\n\n    let mappingsCC = this.state.datas.filter(data => data.caseNumber != null).map(data => {\n      return {\n        caseNumber: data.caseNumber,\n        UID: data.peopleProfileId,\n        name: data.firstName + \" \" + data.lastName,\n        place: data.locationShortaddress,\n        datetime: this.convertSQLDate(data.datetimeEntered, data.datetimeLeft)\n      };\n    }); // Creating the Public at the place List\n\n    let mappingsPATP; // Checks if there are any close contacts be begin with. If there are none than the below will run\n\n    if (this.isEmptyObject(this.state.CloseContacts)) {\n      mappingsPATP = this.state.datas.filter(data => data.caseNumber == null).map(data => {\n        return {\n          UID: data.peopleProfileId,\n          name: data.firstName + \" \" + data.lastName,\n          place: data.locationShortaddress,\n          datetime: this.convertSQLDate(data.datetimeEntered, data.datetimeLeft)\n        };\n      });\n    } // If you added the close contacts, no need to be for the current place (any place), then the below will run\n    else {\n        let newlist = [];\n        this.state.datas.filter(data => data.caseNumber == null).map(data => {\n          // Checks if the place that the user has clicked on contains any close contacts assigned to it. If there are, then it will take away all the people that are in the close \n          // contact list from the PATP\n          if (this.state.CloseContacts[data.locationShortaddress] != undefined) {\n            // console.log(\"Logged: \" + this.state.CloseContacts[placename] + \": \" + Array.isArray(this.state.CloseContacts[placename]))\n            if (this.state.CloseContacts[data.locationShortaddress].includes(data.peopleProfileId) === false) {\n              newlist.push({\n                UID: data.peopleProfileId,\n                name: data.firstName + \" \" + data.lastName,\n                place: data.locationShortaddress,\n                datetime: this.convertSQLDate(data.datetimeEntered, data.datetimeLeft)\n              });\n            }\n          } // If there isnt any close contacts then it will just return all the people from the PTAP back to PTAP\n          else {\n              newlist.push({\n                UID: data.peopleProfileId,\n                name: data.firstName + \" \" + data.lastName,\n                place: data.locationShortaddress,\n                datetime: this.convertSQLDate(data.datetimeEntered, data.datetimeLeft)\n              });\n            }\n        });\n        mappingsPATP = newlist;\n      } //Mapping the Contacts\n\n\n    let newlist2 = [];\n    this.state.datas.filter(data => data.caseNumber == null).map(data => {\n      if (this.state.CloseContacts[data.locationShortaddress] != undefined) {\n        if (this.state.CloseContacts[data.locationShortaddress].includes(data.peopleProfileId)) {\n          newlist2.push({\n            UID: data.peopleProfileId,\n            name: data.firstName + \" \" + data.lastName,\n            place: data.locationShortaddress,\n            datetime: this.convertSQLDate(data.datetimeEntered, data.datetimeLeft)\n          });\n        }\n      }\n    });\n    let mappingsclose = newlist2; // console.log(this.state.showSelection2)\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 482,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 483,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(rb.Navbar, {\n      bg: \"white\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 484,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(rb.Navbar.Brand, {\n      style: {\n        fontSize: 30\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 485,\n        columnNumber: 25\n      }\n    }, \"Filter:\"), /*#__PURE__*/React.createElement(rb.Navbar.Toggle, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 488,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(rb.Nav, {\n      onSelect: eventKey => this.dropdownClicked(eventKey),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 489,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(rb.NavDropdown, {\n      title: this.state.dropDownValue,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 490,\n        columnNumber: 29\n      }\n    }, suspected)), /*#__PURE__*/React.createElement(rb.Navbar.Collapse, {\n      className: \"justify-content-end\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 494,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(rb.Button, {\n      className: \"text-right\",\n      id: \"importCases\",\n      style: {\n        textSize: 15\n      },\n      onClick: () => this.setState({\n        showModal: true\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 496,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Logo, {\n      style: {\n        width: 30,\n        height: 30,\n        paddingRight: 7.4\n      },\n      id: \"uploadLogo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 497,\n        columnNumber: 33\n      }\n    }), \"IMPORT SUSPECTED CASES\")))), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 549,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(rb.Toast, {\n      onClose: () => this.setState({\n        error: false\n      }),\n      show: this.state.error,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 550,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(rb.Toast.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 551,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      className: \"mr-auto\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 552,\n        columnNumber: 29\n      }\n    }, \"Error!\")), /*#__PURE__*/React.createElement(rb.Toast.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 555,\n        columnNumber: 25\n      }\n    }, this.state.errorMsg))), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        display: displaySetting,\n        height: \"100%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 560,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      style: {\n        color: \"#424761\",\n        textAlign: \"center\",\n        marginTop: \"15%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 561,\n        columnNumber: 21\n      }\n    }, \"Import some data to begin\")), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        display: displaySetting2\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 564,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        textAlign: \"left\",\n        height: \"100%\",\n        float: \"left\",\n        width: \"50%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 567,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(MainMap, {\n      profile: this.state.suspectCases,\n      movement: this.state.movements,\n      dataRetrieved: this.dataRetrievedMap,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 570,\n        columnNumber: 25\n      }\n    }), graph1), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        float: \"left\",\n        width: \"50%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 577,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(rb.Tabs, {\n      defaultActiveKey: \"home\",\n      id: \"uncontrolled-tab-example\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 578,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(rb.Tab, {\n      eventKey: \"home\",\n      title: \"CONFIRMED CASES\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 579,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        textAlign: \"left\",\n        height: \"100%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 580,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 581,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(rb.Badge, {\n      pill: true,\n      variant: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 584,\n        columnNumber: 41\n      }\n    }, this.state.placename), ' ', /*#__PURE__*/React.createElement(rb.Badge, {\n      pill: true,\n      variant: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 589,\n        columnNumber: 41\n      }\n    }, this.convertSQLDate(this.state.datetime[0], this.state.datetime[1], \"header\"))), /*#__PURE__*/React.createElement(Table, {\n      tableprops: mappingsCC,\n      display: displaySetting2,\n      type: \"CC\",\n      databack: this.databackTable,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 593,\n        columnNumber: 37\n      }\n    }))), /*#__PURE__*/React.createElement(rb.Tab, {\n      eventKey: \"profile\",\n      title: \"CLOSE CONTACT\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 597,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        textAlign: \"left\",\n        height: \"100%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 598,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 599,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(rb.Badge, {\n      pill: true,\n      variant: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 601,\n        columnNumber: 41\n      }\n    }, this.state.placename), ' ', /*#__PURE__*/React.createElement(rb.Badge, {\n      pill: true,\n      variant: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 606,\n        columnNumber: 41\n      }\n    }, this.convertSQLDate(this.state.datetime[0], this.state.datetime[1], \"header\"))), /*#__PURE__*/React.createElement(Table, {\n      tableprops: mappingsclose,\n      display: displaySetting2,\n      type: \"PATP\",\n      databack: this.databackTable,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 610,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(rb.Button, {\n      onClick: () => this.setState({\n        showSelection: true\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 611,\n        columnNumber: 37\n      }\n    }, \"Manual Import\"))), /*#__PURE__*/React.createElement(rb.Tab, {\n      eventKey: \"contact\",\n      title: \"PUBLIC AT THE PLACE\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 617,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        textAlign: \"left\",\n        height: \"100%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 618,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 619,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(rb.Badge, {\n      pill: true,\n      variant: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 621,\n        columnNumber: 41\n      }\n    }, this.state.placename), ' ', /*#__PURE__*/React.createElement(rb.Badge, {\n      pill: true,\n      variant: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 626,\n        columnNumber: 41\n      }\n    }, this.convertSQLDate(this.state.datetime[0], this.state.datetime[1], \"header\"))), /*#__PURE__*/React.createElement(Table, {\n      tableprops: mappingsPATP,\n      display: displaySetting2,\n      type: \"PATP\",\n      databack: this.databackTable,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 630,\n        columnNumber: 37\n      }\n    }))))), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 637,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(rb.Modal, {\n      show: this.state.showSelection,\n      onHide: () => this.setState({\n        showSelection: false\n      }),\n      centered: true,\n      size: \"xl\",\n      scrollable: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 638,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(rb.Modal.Header, {\n      closeButton: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 639,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(rb.Modal.Title, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 640,\n        columnNumber: 33\n      }\n    }, \"Transfer Users\")), /*#__PURE__*/React.createElement(rb.Modal.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 642,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        float: \"left\",\n        textAlign: \"center\",\n        width: \"40%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 643,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"text\", {\n      fontSize: \"20px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 644,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 644,\n        columnNumber: 59\n      }\n    }, \"Close Contact With Public\")), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        backgroundColor: \"#F9F9F9\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 645,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Table2, {\n      tableprops: mappingsclose,\n      display: displaySetting2,\n      type: \"modal-edit\",\n      callbackFromParent: this.myCallback2,\n      databack: this.databackTable,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 646,\n        columnNumber: 41\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        float: \"left\",\n        textAlign: \"center\",\n        width: \"20%\",\n        alignItems: \"center\",\n        justifyContent: \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 649,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(rb.Button, {\n      onClick: this.toCCClicked,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 650,\n        columnNumber: 37\n      }\n    }, \" < < \"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"clearfix\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 651,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(rb.Button, {\n      onClick: this.fromCCClicked,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 652,\n        columnNumber: 37\n      }\n    }, \" > > \")), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        float: \"right\",\n        textAlign: \"center\",\n        width: \"40%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 654,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"text\", {\n      fontSize: \"20px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 655,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 655,\n        columnNumber: 59\n      }\n    }, \"Public At The Place\")), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        backgroundColor: \"#F9F9F9\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 656,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Table, {\n      tableprops: mappingsPATP,\n      display: displaySetting2,\n      type: \"modal-edit\",\n      callbackFromParent: this.myCallback,\n      databack: this.databackTable,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 657,\n        columnNumber: 41\n      }\n    })))), /*#__PURE__*/React.createElement(rb.Modal.Footer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 661,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(rb.Button, {\n      variant: \"secondary\",\n      onClick: () => this.setState({\n        showSelection: false\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 662,\n        columnNumber: 33\n      }\n    }, \"Close\")))), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 670,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(rb.Modal, {\n      show: this.state.showSelection2,\n      onHide: () => this.setState({\n        showSelection2: false\n      }),\n      size: \"xl\",\n      centered: true,\n      scrollable: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 671,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(rb.Modal.Header, {\n      closeButton: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 672,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(rb.Modal.Title, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 673,\n        columnNumber: 33\n      }\n    }, \"Person Profile\")), /*#__PURE__*/React.createElement(rb.Modal.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 675,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(ProfileModal, {\n      profile: this.state.profileModal,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 676,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(rb.Modal.Footer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 678,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(rb.Button, {\n      variant: \"secondary\",\n      onClick: () => this.setState({\n        showSelection2: false\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 679,\n        columnNumber: 33\n      }\n    }, \"Close\"))))));\n  }\n\n}\n\nexport default TopNavBar;","map":{"version":3,"sources":["G:/INTERNSHIPFILES/CodingFolder/csit-website/src/Components/Navbar.js"],"names":["React","useRef","rb","Papa","axios","Graph","Table","Table2","ProfileModal","MainMap","TopNavBar","Component","constructor","props","myCallback","dataFromChild","setState","CCID","myCallback2","fromCCID","databackTable","profileModal","showSelection2","toCCClicked","IDs","state","datas","length","placename","locationShortaddress","map","x","data","peopleProfileId","push","newItem","CloseContacts","fromCCClicked","filter","includes","dataRetrievedMap","mapData","uploadFile","bind","uploadFile2","handleClick","handleClick2","dropDownValue","dataList","suspectCases","movements","error","errorMsg","showModal","filenames","series","datetime","showSelection","importCompleted","list","handleData","dropdownClicked","text","convertDate","date","lol","dateTimeParts","split","dateParts","timeParts","timeOfDay","finalDate","Date","getTime","populateGraph1","series2","string","numbers","match","Number","forEach","m1","moves","id","toString","p1","sus","suspectId","y","datetimeEntered","datetimeLeft","name","firstName","lastName","console","log","convertSQLDate","startDate1","endDate","type","undefined","date2","time","date1","date21","time1","str","isEmptyObject","obj","Object","keys","compare","arr1","arr2","result","e1","i","e2","render","suspected","Math","random","displaySetting","displaySetting2","seriesdata","test","graph1","graph11","that","options","chart","height","events","dataPointSelection","event","chartContext","config","seriesIndex","dataPointIndex","fetch","then","response","json","catch","err","plotOptions","bar","horizontal","barHeight","xaxis","stroke","width","fill","opacity","legend","position","horizontalAlign","mappingsCC","caseNumber","UID","place","mappingsPATP","newlist","newlist2","mappingsclose","fontSize","eventKey","textSize","paddingRight","display","color","textAlign","marginTop","float","backgroundColor","alignItems","justifyContent"],"mappings":"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","sourcesContent":["import React, { useRef } from 'react'\r\nimport * as rb from 'react-bootstrap'\r\nimport {ReactComponent as Logo} from '../Imgs/upload.svg'\r\nimport Papa from 'papaparse'\r\nimport axios from 'axios'\r\nimport Graph from './Graphs/Graphs'\r\nimport Table from './Tables/Table'\r\nimport Table2 from './Tables/Table2'\r\nimport ProfileModal from './ProfileModal'\r\nimport MainMap from '../Components/MainMap';\r\n// import Chip from '@material-ui/core/Chip';\r\n\r\n\r\nclass TopNavBar extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.uploadFile = this.uploadFile.bind(this);\r\n        this.uploadFile2 = this.uploadFile2.bind(this);\r\n        this.handleClick = this.handleClick.bind(this);\r\n        this.handleClick2 = this.handleClick2.bind(this);\r\n        this.state = {\r\n            dropDownValue: \"None\",\r\n            dataList: [\"None\"],\r\n            suspectCases: [],\r\n            movements: [],\r\n            error: false,\r\n            errorMsg: \"\",\r\n            showModal: false,\r\n            filenames: [],\r\n            series:{},\r\n            datas:[],\r\n            placename:\"\",\r\n            datetime:[],\r\n            showSelection: false,\r\n            CCID:[],\r\n            CloseContacts:{},\r\n            fromCCID:[],\r\n            profileModal:{},\r\n            showSelection2: false,\r\n            mapData:[],\r\n        }\r\n    }\r\n\r\n    importCompleted(){\r\n        const list = this.state\r\n        this.props.handleData(list)\r\n        return\r\n    }\r\n\r\n    // // Suspect Profile File Upload\r\n    // handleClick(e) {\r\n    //     this.refs.fileUploader.click();\r\n    // }\r\n\r\n    // //Suspect Movement File Upload\r\n    // handleClick2(e) {\r\n    //     this.refs.fileUploader2.click();\r\n    // }\r\n\r\n    // // Suspect File Upload\r\n    // uploadFile(event) {\r\n        \r\n    //     const file = event.target.files[0]\r\n\r\n    //     if(file){\r\n    //         if (file.name.includes(\"_suspected\")){\r\n\r\n    //             this.setState({filenames:[...this.state.filenames, file.name]})\r\n    //             const reader = new FileReader();\r\n    //             reader.onload = () => {\r\n    //                 // Use reader.result\r\n    //                 const lols = Papa.parse(reader.result, {header: true, skipEmptyLines: true}, )\r\n                    \r\n    //                 // console.log(lols.data)\r\n    \r\n    //                 // Posting csv data into db\r\n    //                 // this.postData('\"' + JSON.stringify(lols.data) + '\"')\r\n    //                 // this.postSuspects(JSON.stringify(lols.data))\r\n    \r\n    //                 // Adds names into dropdown\r\n    //                 this.setState({dataList: [\"All Suspected Cases\", ...lols.data.map(names => names.firstName + \" \" + names.lastName)]})\r\n    \r\n    //                 const data = lols.data\r\n    //                 this.setState({suspectCases: data})\r\n    //             }\r\n    //             reader.readAsText(file)\r\n    //         }\r\n    //         else{\r\n    //             this.setState({error:true, errorMsg:\"You have uploaded invalid files! Please rename the file to <filename>_suspected (For suspected cases)\"})\r\n    //             return\r\n    //         }\r\n    //     }\r\n    // }\r\n\r\n    // // Movement File Upload\r\n    // uploadFile2(event) {\r\n        \r\n    //     const file = event.target.files[0]\r\n\r\n    //     if(file){\r\n    //         if (file.name.includes(\"_movements\")){\r\n                \r\n    //             this.setState({filenames:[...this.state.filenames, file.name]})\r\n    //             const reader = new FileReader();\r\n    //             reader.onload = () => {\r\n    //                 // Use reader.result\r\n    //                 const lols = Papa.parse(reader.result, {header: true, skipEmptyLines: true}, )\r\n                    \r\n    //                 // console.log(lols.data)\r\n    \r\n    //                 // Posting csv data into db\r\n    //                 // this.postData('\"' + JSON.stringify(lols.data) + '\"')\r\n    //                 // this.postMovements(JSON.stringify(lols.data))\r\n    //                 const data = lols.data\r\n    //                 this.setState({movements: data})\r\n    //             }\r\n    //             reader.readAsText(file)\r\n    //         }\r\n    //         else{\r\n    //             this.setState({error:true, errorMsg:\"You have uploaded invalid files! Please rename the file to <filename>_movement (For suspected case movement)\"})\r\n    //             return\r\n    //         }\r\n    //     }\r\n    // }\r\n\r\n    dropdownClicked(text) {\r\n        this.setState({dropDownValue: text})\r\n    }\r\n\r\n    convertDate(date) {\r\n\r\n        var lol = date\r\n        var dateTimeParts = lol.split(' ')\r\n        // console.log(dateTimeParts)\r\n        var dateParts = dateTimeParts[0].split('/')\r\n        var timeParts = dateTimeParts[1].split(':')\r\n        var timeOfDay = dateTimeParts[2]\r\n        if(timeOfDay === \"pm\"){\r\n            timeParts[0] += 12\r\n        }\r\n\r\n        // new Date(year, month, day, hours, minutes, seconds, milliseconds)\r\n        var finalDate = new Date(dateParts[2], dateParts[1] - 1, dateParts[0], timeParts[0], timeParts[1]);\r\n        // console.log(finalDate)\r\n        return finalDate.getTime();\r\n    }\r\n\r\n    //// ### UNCOMMENT FOR GANTT CHART ###\r\n    // Gantt Chart Data Formatter from movements and suspects\r\n    populateGraph1(){\r\n        let series2 = []\r\n\r\n        var string = this.state.mapData;\r\n        var numbers = string.match(/\\d+/g).map(Number);\r\n        // console.log(numbers)\r\n\r\n        // console.log(this.state.suspectCases)\r\n        numbers.forEach(x => {\r\n            let data = []\r\n\r\n            let m1 = this.state.movements.filter(moves => moves.id === x.toString())[0]\r\n            let p1 = this.state.suspectCases.filter(sus => sus.id === m1.suspectId)[0]\r\n            data.push(\r\n                {\r\n                    x: m1.locationShortaddress,\r\n                    y: [this.convertDate(m1.datetimeEntered),this.convertDate(m1.datetimeLeft)]\r\n                }\r\n            )\r\n            \r\n            series2.push(\r\n                {\r\n                    name: p1.firstName + \" \" + p1.lastName,\r\n                    data: data\r\n                }\r\n            )\r\n        })\r\n\r\n        console.log(series2)\r\n\r\n        // console.log(this.state.mapData[0])\r\n        // if(Array.isArray(this.state.mapData)){\r\n        //     console.log(\"NAY\")\r\n        //     \r\n        // }\r\n        // this.state.suspectCases.forEach(suspect => {\r\n        //     let data = []\r\n\r\n        //     this.state.movements.filter(moves => moves.suspectId === suspect.id).forEach(movement => {\r\n        //         data.push(\r\n        //             {\r\n        //                 x: movement.locationShortaddress,\r\n        //                 y: [this.convertDate(movement.datetimeEntered),this.convertDate(movement.datetimeLeft)]\r\n        //             }\r\n        //         )\r\n        //     })\r\n\r\n        //     series2.push(\r\n        //         {\r\n        //             name: suspect.firstName + \" \" + suspect.lastName,\r\n        //             data: data\r\n        //         }\r\n        //     )\r\n        // })\r\n        return series2\r\n    }\r\n\r\n    convertSQLDate(startDate1, endDate, type = undefined){\r\n        \r\n        if(startDate1 !== undefined && endDate !== undefined){\r\n            var date = new Date(startDate1)\r\n            var date2 = date.toString().split(\" \")\r\n            var time = date2[4].split(\":\")\r\n    \r\n            var date1 = new Date(endDate)\r\n            var date21 = date1.toString().split(\" \")\r\n            var time1 = date21[4].split(\":\")\r\n            \r\n            let str\r\n            if(type === \"header\"){\r\n                str = time[0] + \":\"+ time[1] + \" - \" + time1[0] + \":\" + time1[1]\r\n            }\r\n            else{\r\n                str = date2[2] + \" \" + date2[1] + \", \" + time[0] + \":\"+ time[1] + \" - \" + time1[0] + \":\" + time1[1]\r\n            }\r\n           \r\n            return str\r\n        }\r\n        // return date2[1]\r\n    }\r\n\r\n    myCallback = (dataFromChild) => {\r\n        // console.log(\"Data1:\" + dataFromChild)\r\n        this.setState({CCID:dataFromChild})\r\n    }\r\n\r\n    myCallback2 = (dataFromChild) => {\r\n        // console.log(\"Data2:\" + dataFromChild)\r\n        this.setState({fromCCID:dataFromChild})\r\n    }\r\n\r\n    databackTable = (dataFromChild) => {\r\n\r\n        this.setState({profileModal:dataFromChild})\r\n        this.setState({showSelection2:true})\r\n    }\r\n\r\n    isEmptyObject(obj) {\r\n        return !!obj && Object.keys(obj).length === 0 && obj.constructor === Object;\r\n    }\r\n    \r\n    toCCClicked = () => {\r\n        let IDs = []\r\n\r\n        if(this.state.datas.length > 0){\r\n            let placename = this.state.datas[0].locationShortaddress\r\n            // console.log(this.state.CCID)\r\n            this.state.datas.map(x => {\r\n                for(var data of this.state.CCID){\r\n    \r\n                    // console.log(data)\r\n                    if(x.peopleProfileId == data){\r\n                        IDs.push(x.peopleProfileId)\r\n                    }\r\n                }\r\n                \r\n            })\r\n\r\n            // console.log(\"TO: \" + IDs)\r\n            \r\n            let newItem = {...this.state.CloseContacts, [placename]:IDs}\r\n\r\n            this.setState({CloseContacts:newItem}) \r\n        }\r\n    }\r\n\r\n    compare(arr1,arr2){\r\n  \r\n        if(!arr1  || !arr2) return\r\n       \r\n        let result;\r\n       \r\n        arr1.forEach((e1,i)=>arr2.forEach(e2=>{\r\n         \r\n            if(e1.length > 1 && e2.length){\r\n                result = this.compare(e1,e2);\r\n            }else if(e1 !== e2 ){\r\n                result = false\r\n            }else{\r\n                result = true\r\n            }\r\n        }))\r\n       return result\r\n    }\r\n\r\n    fromCCClicked = () => {\r\n\r\n        if(this.state.datas.length > 0){\r\n            let placename = this.state.datas[0].locationShortaddress\r\n            let IDs = this.state.CloseContacts[placename].filter(x => this.state.fromCCID.includes(x) === false).map(x => {return x})\r\n            \r\n            // console.log(\"From: \" + IDs)\r\n\r\n            let newItem = {...this.state.CloseContacts, [placename]:IDs}\r\n\r\n            // console.log(\"Items:\" + newItem)\r\n\r\n            this.setState({CloseContacts:newItem}) \r\n        }\r\n\r\n    }\r\n\r\n    dataRetrievedMap = (dataFromChild) => {\r\n        this.setState({mapData: dataFromChild})\r\n    }\r\n\r\n    render() {\r\n\r\n        let suspected = this.state.dataList.map(sus => <rb.NavDropdown.Item eventKey={Math.random()}>{sus}</rb.NavDropdown.Item>)\r\n        \r\n        let displaySetting, displaySetting2, seriesdata\r\n\r\n        //// ### UNCOMMENT FOR GANTT CHART ###\r\n        let test\r\n\r\n        if(this.state.suspectCases.length > 0 && this.state.movements.length > 0 ){\r\n            displaySetting = \"none\"\r\n            displaySetting2 = \"block\"\r\n            \r\n        }\r\n        else{\r\n            displaySetting = \"block\"\r\n            displaySetting2 = \"none\"\r\n        }\r\n        \r\n        let graph1, graph11\r\n\r\n        const that = this;\r\n\r\n        let placename;\r\n\r\n        //// ### UNCOMMENT FOR GANTT CHART ###\r\n        if(this.state.mapData != \"\"){\r\n            console.log(\"YAY\")\r\n            test = this.populateGraph1()\r\n        }\r\n        \r\n\r\n        //// ### UNCOMMENT FOR GANTT CHART ###\r\n        if(test !== undefined){\r\n            var options = {\r\n                options: {\r\n                    chart: {\r\n                        height: 450, \r\n                        type: 'rangeBar',\r\n                        events:{\r\n                            dataPointSelection: function(event, chartContext, config) {\r\n                                // Name of place\r\n                                // console.log(test[config.seriesIndex].data[config.dataPointIndex].x)\r\n\r\n                                that.setState({placename:test[config.seriesIndex].data[config.dataPointIndex].x, datetime:test[config.seriesIndex].data[config.dataPointIndex].y})\r\n\r\n                                // For the time\r\n                                // console.log(test[config.seriesIndex].data[config.dataPointIndex].y)\r\n                                \r\n                                // For the Name\r\n                                // console.log(test[config.seriesIndex].name)\r\n\r\n                                placename = test[config.seriesIndex].data[config.dataPointIndex].x\r\n\r\n                                fetch(\"http://localhost:8080/getMovementForDate?placeName=\"+ test[config.seriesIndex].data[config.dataPointIndex].x +\"&dates=\" + test[config.seriesIndex].data[config.dataPointIndex].y + \"&personName=\" + test[config.seriesIndex].name)\r\n                                .then(response => response.json()).then(data => that.setState({datas:data})).catch(err => {console.log(err);});\r\n                            }\r\n                        }\r\n                    },\r\n                    plotOptions: {\r\n                      bar: {horizontal: true, barHeight: '80%'}\r\n                    },\r\n                    xaxis: {\r\n                      type: 'datetime'\r\n                    },\r\n                    stroke: {\r\n                      width: 1\r\n                    },\r\n                    fill: {\r\n                      type: 'solid',\r\n                      opacity: 0.6\r\n                    },\r\n                    legend: {\r\n                      position: 'top',\r\n                      horizontalAlign: 'left'\r\n                    }\r\n                }\r\n            }\r\n            graph1 = <Graph display={displaySetting2} options={options.options} series={test} tool/>\r\n        }\r\n\r\n        // Creating the COnfirmed Cases\r\n        let mappingsCC = this.state.datas.filter(data => data.caseNumber != null).map(data => {\r\n            return({\r\n                caseNumber:data.caseNumber,\r\n                UID:data.peopleProfileId,\r\n                name:data.firstName + \" \" + data.lastName,\r\n                place:data.locationShortaddress,\r\n                datetime:this.convertSQLDate(data.datetimeEntered, data.datetimeLeft)\r\n            })\r\n        })\r\n\r\n        // Creating the Public at the place List\r\n        let mappingsPATP\r\n        \r\n        // Checks if there are any close contacts be begin with. If there are none than the below will run\r\n        if(this.isEmptyObject(this.state.CloseContacts)){\r\n            mappingsPATP = this.state.datas.filter(data => data.caseNumber == null).map(data =>{\r\n                return({\r\n                    UID:data.peopleProfileId,\r\n                    name:data.firstName + \" \" + data.lastName,\r\n                    place:data.locationShortaddress,\r\n                    datetime:this.convertSQLDate(data.datetimeEntered, data.datetimeLeft)\r\n                })\r\n            })\r\n        }\r\n\r\n        // If you added the close contacts, no need to be for the current place (any place), then the below will run\r\n        else{\r\n            \r\n            let newlist = []\r\n\r\n            this.state.datas.filter(data => data.caseNumber == null).map(data =>{\r\n\r\n                // Checks if the place that the user has clicked on contains any close contacts assigned to it. If there are, then it will take away all the people that are in the close \r\n                // contact list from the PATP\r\n                if(this.state.CloseContacts[data.locationShortaddress] != undefined){\r\n                    // console.log(\"Logged: \" + this.state.CloseContacts[placename] + \": \" + Array.isArray(this.state.CloseContacts[placename]))\r\n                    if(this.state.CloseContacts[data.locationShortaddress].includes(data.peopleProfileId) === false){\r\n                        newlist.push({\r\n                            UID:data.peopleProfileId,\r\n                            name:data.firstName + \" \" + data.lastName,\r\n                            place:data.locationShortaddress,\r\n                            datetime:this.convertSQLDate(data.datetimeEntered, data.datetimeLeft)\r\n                        })\r\n                    }\r\n                }\r\n\r\n                // If there isnt any close contacts then it will just return all the people from the PTAP back to PTAP\r\n                else{\r\n                    newlist.push({\r\n                        UID:data.peopleProfileId,\r\n                        name:data.firstName + \" \" + data.lastName,\r\n                        place:data.locationShortaddress,\r\n                        datetime:this.convertSQLDate(data.datetimeEntered, data.datetimeLeft)\r\n                    })\r\n                }       \r\n            })\r\n\r\n            mappingsPATP = newlist\r\n        }\r\n\r\n        //Mapping the Contacts\r\n        let newlist2 = []\r\n\r\n        this.state.datas.filter(data => data.caseNumber == null).map(data =>{\r\n            \r\n            if(this.state.CloseContacts[data.locationShortaddress] != undefined){\r\n                if(this.state.CloseContacts[data.locationShortaddress].includes(data.peopleProfileId)){\r\n                    newlist2.push({\r\n                        UID:data.peopleProfileId,\r\n                        name:data.firstName + \" \" + data.lastName,\r\n                        place:data.locationShortaddress,\r\n                        datetime:this.convertSQLDate(data.datetimeEntered, data.datetimeLeft)\r\n                    })\r\n                }\r\n            }  \r\n        })\r\n\r\n        let mappingsclose = newlist2\r\n\r\n        // console.log(this.state.showSelection2)\r\n\r\n        return (\r\n            <div>\r\n                <div>\r\n                    <rb.Navbar bg=\"white\">\r\n                        <rb.Navbar.Brand style={{fontSize:30}}>\r\n                            Filter:\r\n                        </rb.Navbar.Brand>\r\n                        <rb.Navbar.Toggle />\r\n                        <rb.Nav onSelect={(eventKey) => this.dropdownClicked(eventKey)}>\r\n                            <rb.NavDropdown title={this.state.dropDownValue}>\r\n                                {suspected}\r\n                            </rb.NavDropdown>\r\n                        </rb.Nav>\r\n                        <rb.Navbar.Collapse className=\"justify-content-end\">\r\n\r\n                            <rb.Button className=\"text-right\" id=\"importCases\" style={{textSize:15}} onClick={() => this.setState({showModal: true})}>\r\n                                <Logo style={{width:30, height:30, paddingRight:7.4}} id=\"uploadLogo\"/>\r\n                                IMPORT SUSPECTED CASES\r\n                            </rb.Button>\r\n\r\n                            {/* <rb.Button className=\"text-right\" id=\"importCases\" style={{textSize:15}} onClick={this.handleClick.bind(this)}>\r\n                                <Logo style={{width:30, height:30, paddingRight:7.4}} id=\"uploadLogo\"/>\r\n                                IMPORT SUSPECTED CASES\r\n                            </rb.Button>\r\n                            <input type=\"file\" id=\"file\" ref=\"fileUploader\" style={{display: \"none\"}} onChange={this.uploadFile} multiple/> */}\r\n\r\n                        </rb.Navbar.Collapse>\r\n                    </rb.Navbar>\r\n                </div>\r\n                \r\n                {/* Upload Case Files */}\r\n                {/* <div>\r\n                    <rb.Modal show={this.state.showModal} onHide={() => this.setState({showModal: false}) } animation={false}>\r\n                        <rb.Modal.Header closeButton>\r\n                            <rb.Modal.Title>Upload Suspect Cases Files</rb.Modal.Title>\r\n                        </rb.Modal.Header>\r\n\r\n                        <rb.Modal.Body className=\"d-flex justify-content-center\">\r\n\r\n                            <div className=\"row\" >\r\n                                <div className=\".col-md-6\" style={{paddingRight: 15}}>\r\n                                    <b>Profile of suspected case</b>\r\n                                    <br/>\r\n                                    <br/>\r\n                                    <rb.Button variant=\"secondary\" style={{width:\"100%\"}} onClick={this.handleClick.bind(this)}>\r\n                                        Upload\r\n                                    </rb.Button>\r\n                                    <input type=\"file\" id=\"file\" ref=\"fileUploader\" style={{display: \"none\"}} onChange={this.uploadFile}/>\r\n                                    <p>File Chosen: </p>\r\n                                </div>\r\n\r\n                                <div style ={{borderLeft: \"2px dashed black\", height: \"100px\"}}></div>\r\n\r\n                                <div className=\".col-md-6\" variant=\"primary\" style={{paddingLeft: 15}}>\r\n                                    <b>Movement of suspected case</b>\r\n                                    <br/>\r\n                                    <br/>\r\n                                    <rb.Button variant=\"secondary\" style={{width:\"100%\"}} onClick={this.handleClick2.bind(this)}>\r\n                                        Upload\r\n                                    </rb.Button>\r\n                                    <input type=\"file\" id=\"file2\" ref=\"fileUploader2\" style={{display: \"none\"}} onChange={this.uploadFile2}/>\r\n                                </div>\r\n                            </div>\r\n                        </rb.Modal.Body>\r\n                    </rb.Modal>\r\n                </div> */}\r\n                \r\n                {/* Error msg when upload wrong file */}\r\n                <div>\r\n                    <rb.Toast onClose={() => this.setState({error: false})} show={this.state.error}>\r\n                        <rb.Toast.Header>\r\n                            <strong className=\"mr-auto\">Error!</strong>\r\n                            {/* <small>11 mins ago</small> */}\r\n                        </rb.Toast.Header>\r\n                        <rb.Toast.Body>{this.state.errorMsg}</rb.Toast.Body>\r\n                    </rb.Toast>\r\n                </div>\r\n\r\n                {/* Import Some Data to Begin Text */}\r\n                <div style={{display:displaySetting, height:\"100%\"}}>\r\n                    <h1 style={{color:\"#424761\", textAlign:\"center\", marginTop:\"15%\"}}>Import some data to begin</h1>\r\n                </div>\r\n\r\n                <div style={{display:displaySetting2}}>\r\n\r\n                    {/* Gantt Chart / Map */}\r\n                    <div style={{textAlign: \"left\", height:\"100%\", float:\"left\", width:\"50%\"}}>\r\n\r\n                        {/* UNCOMMENT FOR MAP */}\r\n                        <MainMap profile={this.state.suspectCases} movement={this.state.movements} dataRetrieved={this.dataRetrievedMap}/>\r\n\r\n                        {/* ### UNCOMMENT FOR GANTT CHART ### */}\r\n                        {graph1}\r\n                    </div>\r\n                    \r\n                    {/* Tabs */}\r\n                    <div style={{float:\"left\", width:\"50%\"}}>\r\n                        <rb.Tabs defaultActiveKey=\"home\" id=\"uncontrolled-tab-example\">\r\n                            <rb.Tab eventKey=\"home\" title=\"CONFIRMED CASES\">\r\n                                <div style={{textAlign: \"left\", height:\"100%\"}}>\r\n                                    <h5>\r\n                                        {/* <Chip label=\"Basic\" /> */}\r\n                                        {/* PlaceName */}\r\n                                        <rb.Badge pill variant=\"primary\">\r\n                                            {this.state.placename}\r\n                                        </rb.Badge>\r\n                                        {' '}\r\n                                        {/* Time Span */}\r\n                                        <rb.Badge pill variant=\"primary\">\r\n                                            {this.convertSQLDate(this.state.datetime[0], this.state.datetime[1], \"header\")}\r\n                                        </rb.Badge>\r\n                                    </h5>\r\n                                    <Table tableprops={mappingsCC} display={displaySetting2} type = \"CC\" databack={this.databackTable}/>\r\n                                </div>\r\n                            </rb.Tab>\r\n\r\n                            <rb.Tab eventKey=\"profile\" title=\"CLOSE CONTACT\">\r\n                                <div style={{textAlign: \"left\", height:\"100%\"}}>\r\n                                    <h5>\r\n                                        {/* PlaceName */}\r\n                                        <rb.Badge pill variant=\"primary\">\r\n                                            {this.state.placename}\r\n                                        </rb.Badge>\r\n                                        {' '}\r\n                                        {/* Time Span */}\r\n                                        <rb.Badge pill variant=\"primary\">\r\n                                            {this.convertSQLDate(this.state.datetime[0], this.state.datetime[1], \"header\")}\r\n                                        </rb.Badge>\r\n                                    </h5>\r\n                                    <Table tableprops={mappingsclose} display={displaySetting2} type=\"PATP\" databack={this.databackTable}/>\r\n                                    <rb.Button onClick={() => this.setState({showSelection:true})}>\r\n                                        Manual Import\r\n                                    </rb.Button>\r\n                                </div>\r\n                            </rb.Tab>\r\n\r\n                            <rb.Tab eventKey=\"contact\" title=\"PUBLIC AT THE PLACE\">\r\n                                <div style={{textAlign: \"left\", height:\"100%\"}}>\r\n                                    <h5>\r\n                                        {/* PlaceName */}\r\n                                        <rb.Badge pill variant=\"primary\">\r\n                                            {this.state.placename}\r\n                                        </rb.Badge>\r\n                                        {' '}\r\n                                        {/* Time Span */}\r\n                                        <rb.Badge pill variant=\"primary\">\r\n                                            {this.convertSQLDate(this.state.datetime[0], this.state.datetime[1], \"header\")}\r\n                                        </rb.Badge>\r\n                                    </h5>\r\n                                    <Table tableprops={mappingsPATP} display={displaySetting2} type=\"PATP\" databack={this.databackTable}/>\r\n                                </div>\r\n                            </rb.Tab>\r\n                        </rb.Tabs>         \r\n                    </div>\r\n                    \r\n                    {/* PTAP TO CC AND CC TO PTAP */}\r\n                    <div>\r\n                        <rb.Modal show={this.state.showSelection} onHide={()=>this.setState({showSelection:false})} centered size=\"xl\" scrollable={true}>\r\n                            <rb.Modal.Header closeButton>\r\n                                <rb.Modal.Title>Transfer Users</rb.Modal.Title>\r\n                            </rb.Modal.Header>\r\n                            <rb.Modal.Body>\r\n                                <div style={{float:\"left\", textAlign:\"center\", width:\"40%\"}}>\r\n                                    <text fontSize=\"20px\"><b>Close Contact With Public</b></text>\r\n                                    <div style={{backgroundColor:\"#F9F9F9\", }}>\r\n                                        <Table2 tableprops={mappingsclose} display={displaySetting2} type=\"modal-edit\" callbackFromParent={this.myCallback2} databack={this.databackTable}/>\r\n                                    </div>\r\n                                </div>\r\n                                <div style={{float:\"left\", textAlign:\"center\", width:\"20%\", alignItems:\"center\", justifyContent:\"center\"}}>\r\n                                    <rb.Button onClick={this.toCCClicked}> &lt; &lt; </rb.Button>\r\n                                    <div className=\"clearfix\"></div>\r\n                                    <rb.Button onClick={this.fromCCClicked}> &gt; &gt; </rb.Button>\r\n                                </div>\r\n                                <div style={{float:\"right\", textAlign:\"center\", width:\"40%\"}}>\r\n                                    <text fontSize=\"20px\"><b>Public At The Place</b></text>\r\n                                    <div style={{backgroundColor:\"#F9F9F9\"}}>\r\n                                        <Table tableprops={mappingsPATP} display={displaySetting2} type=\"modal-edit\" callbackFromParent={this.myCallback} databack={this.databackTable}/>\r\n                                    </div>\r\n                                </div>\r\n                            </rb.Modal.Body>\r\n                            <rb.Modal.Footer>\r\n                                <rb.Button variant=\"secondary\" onClick={()=>this.setState({showSelection:false})}>\r\n                                    Close\r\n                                </rb.Button>\r\n                            </rb.Modal.Footer>\r\n                        </rb.Modal>\r\n                    </div>\r\n                    \r\n                    {/* Profile Page */}\r\n                    <div>\r\n                        <rb.Modal show={this.state.showSelection2} onHide={()=>this.setState({showSelection2:false})} size=\"xl\" centered scrollable={true}>\r\n                            <rb.Modal.Header closeButton>\r\n                                <rb.Modal.Title>Person Profile</rb.Modal.Title>\r\n                            </rb.Modal.Header>\r\n                            <rb.Modal.Body>\r\n                                <ProfileModal profile={this.state.profileModal}/>\r\n                            </rb.Modal.Body>\r\n                            <rb.Modal.Footer>\r\n                                <rb.Button variant=\"secondary\" onClick={()=>this.setState({showSelection2:false})}>\r\n                                    Close\r\n                                </rb.Button>\r\n                            </rb.Modal.Footer>\r\n                        </rb.Modal>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default TopNavBar"]},"metadata":{},"sourceType":"module"}