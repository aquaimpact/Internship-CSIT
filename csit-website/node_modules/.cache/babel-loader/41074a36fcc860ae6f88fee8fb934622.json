{"ast":null,"code":"var _jsxFileName = \"G:\\\\INTERNSHIPFILES\\\\CodingFolder\\\\csit-website\\\\src\\\\Components\\\\Navbar.js\";\nimport React, { useRef } from 'react';\nimport * as rb from 'react-bootstrap';\nimport { ReactComponent as Logo } from \"@svgr/webpack?-svgo,+titleProp,+ref!../Imgs/upload.svg\";\nimport Papa from 'papaparse';\nimport axios from 'axios';\nimport Graph from './Graphs';\nimport Table from './Table';\nimport Table2 from './Table2'; // import Chip from '@material-ui/core/Chip';\n\nclass TopNavBar extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.myCallback = dataFromChild => {\n      // console.log(\"Data1:\" + dataFromChild)\n      this.setState({\n        CCID: dataFromChild\n      });\n    };\n\n    this.myCallback2 = dataFromChild => {\n      // console.log(\"Data2:\" + dataFromChild)\n      this.setState({\n        fromCCID: dataFromChild\n      });\n    };\n\n    this.databackTable = dataFromChild => {\n      console.log(\"Modal Data:\" + dataFromChild); // this.setState({fromCCID:dataFromChild})\n    };\n\n    this.toCCClicked = () => {\n      let IDs = [];\n\n      if (this.state.datas.length > 0) {\n        let placename = this.state.datas[0].locationShortaddress; // console.log(this.state.CCID)\n\n        this.state.datas.map(x => {\n          for (var data of this.state.CCID) {\n            // console.log(data)\n            if (x.peopleProfileId == data) {\n              IDs.push(x.peopleProfileId);\n            }\n          }\n        });\n        console.log(\"TO: \" + IDs);\n        let newItem = { ...this.state.CloseContacts,\n          [placename]: IDs\n        };\n        this.setState({\n          CloseContacts: newItem\n        });\n      }\n    };\n\n    this.fromCCClicked = () => {\n      if (this.state.datas.length > 0) {\n        let placename = this.state.datas[0].locationShortaddress;\n        let IDs = this.state.CloseContacts[placename].filter(x => this.state.fromCCID.includes(x) === false).map(x => {\n          return x;\n        });\n        console.log(\"From: \" + IDs);\n        let newItem = { ...this.state.CloseContacts,\n          [placename]: IDs\n        };\n        console.log(\"Items:\" + newItem);\n        this.setState({\n          CloseContacts: newItem\n        });\n      }\n    };\n\n    this.uploadFile = this.uploadFile.bind(this);\n    this.uploadFile2 = this.uploadFile2.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n    this.handleClick2 = this.handleClick2.bind(this);\n    this.state = {\n      dropDownValue: \"None\",\n      dataList: [\"None\"],\n      suspectCases: [],\n      movements: [],\n      error: false,\n      errorMsg: \"\",\n      showModal: false,\n      filenames: [],\n      series: {},\n      datas: [],\n      placename: \"\",\n      datetime: [],\n      showSelection: false,\n      CCID: [],\n      CloseContacts: {},\n      fromCCID: []\n    };\n  }\n\n  importCompleted() {\n    const list = this.state;\n    this.props.handleData(list);\n    return;\n  }\n\n  handleClick(e) {\n    this.refs.fileUploader.click();\n  }\n\n  handleClick2(e) {\n    this.refs.fileUploader2.click();\n  }\n\n  uploadFile(event) {\n    const file = event.target.files[0];\n\n    if (file) {\n      if (file.name.includes(\"_suspected\")) {\n        this.setState({\n          filenames: [...this.state.filenames, file.name]\n        });\n        const reader = new FileReader();\n\n        reader.onload = () => {\n          // Use reader.result\n          const lols = Papa.parse(reader.result, {\n            header: true,\n            skipEmptyLines: true\n          });\n          console.log(lols.data); // Posting csv data into db\n          // this.postData('\"' + JSON.stringify(lols.data) + '\"')\n          // this.postSuspects(JSON.stringify(lols.data))\n          // Adds names into dropdown\n\n          this.setState({\n            dataList: [\"None\", ...lols.data.map(names => names.firstName + \" \" + names.lastName)]\n          });\n          const data = lols.data;\n          this.setState({\n            suspectCases: data\n          });\n        };\n\n        reader.readAsText(file);\n      } else {\n        this.setState({\n          error: true,\n          errorMsg: \"You have uploaded invalid files! Please rename the file to <filename>_suspected (For suspected cases)\"\n        });\n        return;\n      }\n    }\n  }\n\n  uploadFile2(event) {\n    const file = event.target.files[0];\n\n    if (file) {\n      if (file.name.includes(\"_movements\")) {\n        this.setState({\n          filenames: [...this.state.filenames, file.name]\n        });\n        const reader = new FileReader();\n\n        reader.onload = () => {\n          // Use reader.result\n          const lols = Papa.parse(reader.result, {\n            header: true,\n            skipEmptyLines: true\n          });\n          console.log(lols.data); // Posting csv data into db\n          // this.postData('\"' + JSON.stringify(lols.data) + '\"')\n          // this.postMovements(JSON.stringify(lols.data))\n\n          const data = lols.data;\n          this.setState({\n            movements: data\n          });\n        };\n\n        reader.readAsText(file);\n      } else {\n        this.setState({\n          error: true,\n          errorMsg: \"You have uploaded invalid files! Please rename the file to <filename>_movement (For suspected case movement)\"\n        });\n        return;\n      }\n    }\n  }\n\n  dropdownClicked(text) {\n    this.setState({\n      dropDownValue: text\n    });\n  }\n\n  convertDate(date) {\n    var lol = date;\n    var dateTimeParts = lol.split(' '); // console.log(dateTimeParts)\n\n    var dateParts = dateTimeParts[0].split('/');\n    var timeParts = dateTimeParts[1].split(':');\n    var timeOfDay = dateTimeParts[2];\n\n    if (timeOfDay === \"pm\") {\n      timeParts[0] += 12;\n    } // new Date(year, month, day, hours, minutes, seconds, milliseconds)\n\n\n    var finalDate = new Date(dateParts[2], dateParts[1] - 1, dateParts[0], timeParts[0], timeParts[1]); // console.log(finalDate)\n\n    return finalDate.getTime();\n  }\n\n  populateGraph1() {\n    let series2 = [];\n    this.state.suspectCases.forEach(suspect => {\n      let data = [];\n      this.state.movements.filter(moves => moves.suspectId === suspect.id).forEach(movement => {\n        data.push({\n          x: movement.locationShortaddress,\n          y: [this.convertDate(movement.datetimeEntered), this.convertDate(movement.datetimeLeft)]\n        });\n      });\n      series2.push({\n        name: suspect.firstName + \" \" + suspect.lastName,\n        data: data\n      });\n    });\n    return series2;\n  }\n\n  convertSQLDate(startDate1, endDate, type = undefined) {\n    if (startDate1 !== undefined && endDate !== undefined) {\n      var date = new Date(startDate1);\n      var date2 = date.toString().split(\" \");\n      var time = date2[4].split(\":\");\n      var date1 = new Date(endDate);\n      var date21 = date1.toString().split(\" \");\n      var time1 = date21[4].split(\":\");\n      let str;\n\n      if (type === \"header\") {\n        str = time[0] + \":\" + time[1] + \" - \" + time1[0] + \":\" + time1[1];\n      } else {\n        str = date2[2] + \" \" + date2[1] + \", \" + time[0] + \":\" + time[1] + \" - \" + time1[0] + \":\" + time1[1];\n      }\n\n      return str;\n    } // return date2[1]\n\n  } // Still kkeeps adding values to the list\n\n\n  isEmptyObject(obj) {\n    return !!obj && Object.keys(obj).length === 0 && obj.constructor === Object;\n  }\n\n  compare(arr1, arr2) {\n    if (!arr1 || !arr2) return;\n    let result;\n    arr1.forEach((e1, i) => arr2.forEach(e2 => {\n      if (e1.length > 1 && e2.length) {\n        result = this.compare(e1, e2);\n      } else if (e1 !== e2) {\n        result = false;\n      } else {\n        result = true;\n      }\n    }));\n    return result;\n  }\n\n  render() {\n    let suspected = this.state.dataList.map(sus => /*#__PURE__*/React.createElement(rb.NavDropdown.Item, {\n      eventKey: Math.random(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 56\n      }\n    }, sus));\n    let displaySetting, displaySetting2, seriesdata;\n    let test;\n\n    if (this.state.suspectCases.length > 0 && this.state.movements.length > 0) {\n      displaySetting = \"none\";\n      displaySetting2 = \"block\";\n      test = this.populateGraph1();\n    } else {\n      displaySetting = \"block\";\n      displaySetting2 = \"none\";\n    }\n\n    let graph1, graph11;\n    const that = this;\n    let placename;\n\n    if (test !== undefined) {\n      var options = {\n        options: {\n          chart: {\n            height: 450,\n            type: 'rangeBar',\n            events: {\n              dataPointSelection: function (event, chartContext, config) {\n                // Name of place\n                // console.log(test[config.seriesIndex].data[config.dataPointIndex].x)\n                that.setState({\n                  placename: test[config.seriesIndex].data[config.dataPointIndex].x,\n                  datetime: test[config.seriesIndex].data[config.dataPointIndex].y\n                }); // For the time\n                // console.log(test[config.seriesIndex].data[config.dataPointIndex].y)\n                // For the Name\n                // console.log(test[config.seriesIndex].name)\n\n                placename = test[config.seriesIndex].data[config.dataPointIndex].x;\n                fetch(\"http://localhost:8080/getMovementForDate?placeName=\" + test[config.seriesIndex].data[config.dataPointIndex].x + \"&dates=\" + test[config.seriesIndex].data[config.dataPointIndex].y + \"&personName=\" + test[config.seriesIndex].name).then(response => response.json()).then(data => that.setState({\n                  datas: data\n                })).catch(err => {\n                  console.log(err);\n                });\n              }\n            }\n          },\n          plotOptions: {\n            bar: {\n              horizontal: true,\n              barHeight: '80%'\n            }\n          },\n          xaxis: {\n            type: 'datetime'\n          },\n          stroke: {\n            width: 1\n          },\n          fill: {\n            type: 'solid',\n            opacity: 0.6\n          },\n          legend: {\n            position: 'top',\n            horizontalAlign: 'left'\n          }\n        }\n      };\n      graph1 = /*#__PURE__*/React.createElement(Graph, {\n        display: displaySetting2,\n        options: options.options,\n        series: test,\n        tool: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 22\n        }\n      });\n    }\n\n    let mappingsCC = this.state.datas.filter(data => data.caseNumber != null).map(data => {\n      return {\n        caseNumber: data.caseNumber,\n        UID: data.peopleProfileId,\n        name: data.firstName + \" \" + data.lastName,\n        place: data.locationShortaddress,\n        datetime: this.convertSQLDate(data.datetimeEntered, data.datetimeLeft)\n      };\n    });\n    let mappingsPATP; // Checks if there are any close contacts be begin with. If there are none than the below will run\n\n    if (this.isEmptyObject(this.state.CloseContacts)) {\n      mappingsPATP = this.state.datas.filter(data => data.caseNumber == null).map(data => {\n        return {\n          UID: data.peopleProfileId,\n          name: data.firstName + \" \" + data.lastName,\n          place: data.locationShortaddress,\n          datetime: this.convertSQLDate(data.datetimeEntered, data.datetimeLeft)\n        };\n      });\n    } // If you added the close contacts, no need to be for the current place (any place), then the below will run\n    else {\n        let newlist = [];\n        this.state.datas.filter(data => data.caseNumber == null).map(data => {\n          // Checks if the place that the user has clicked on contains any close contacts assigned to it. If there are, then it will take away all the people that are in the close \n          // contact list from the PATP\n          if (this.state.CloseContacts[data.locationShortaddress] != undefined) {\n            // console.log(\"Logged: \" + this.state.CloseContacts[placename] + \": \" + Array.isArray(this.state.CloseContacts[placename]))\n            if (this.state.CloseContacts[data.locationShortaddress].includes(data.peopleProfileId) === false) {\n              newlist.push({\n                UID: data.peopleProfileId,\n                name: data.firstName + \" \" + data.lastName,\n                place: data.locationShortaddress,\n                datetime: this.convertSQLDate(data.datetimeEntered, data.datetimeLeft)\n              });\n            }\n          } // If there isnt any close contacts then it will just return all the people from the PTAP back to PTAP\n          else {\n              newlist.push({\n                UID: data.peopleProfileId,\n                name: data.firstName + \" \" + data.lastName,\n                place: data.locationShortaddress,\n                datetime: this.convertSQLDate(data.datetimeEntered, data.datetimeLeft)\n              });\n            }\n        });\n        mappingsPATP = newlist;\n      }\n\n    let newlist2 = [];\n    this.state.datas.filter(data => data.caseNumber == null).map(data => {\n      if (this.state.CloseContacts[data.locationShortaddress] != undefined) {\n        if (this.state.CloseContacts[data.locationShortaddress].includes(data.peopleProfileId)) {\n          newlist2.push({\n            UID: data.peopleProfileId,\n            name: data.firstName + \" \" + data.lastName,\n            place: data.locationShortaddress,\n            datetime: this.convertSQLDate(data.datetimeEntered, data.datetimeLeft)\n          });\n        }\n      }\n    });\n    let mappingsclose = newlist2;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 419,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 420,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(rb.Navbar, {\n      bg: \"white\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 421,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(rb.Navbar.Brand, {\n      style: {\n        fontSize: 30\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 422,\n        columnNumber: 25\n      }\n    }, \"Filter:\"), /*#__PURE__*/React.createElement(rb.Navbar.Toggle, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 425,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(rb.Nav, {\n      onSelect: eventKey => this.dropdownClicked(eventKey),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 426,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(rb.NavDropdown, {\n      title: this.state.dropDownValue,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 427,\n        columnNumber: 29\n      }\n    }, suspected)), /*#__PURE__*/React.createElement(rb.Navbar.Collapse, {\n      className: \"justify-content-end\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 431,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(rb.Button, {\n      className: \"text-right\",\n      id: \"importCases\",\n      style: {\n        textSize: 15\n      },\n      onClick: () => this.setState({\n        showModal: true\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 433,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Logo, {\n      style: {\n        width: 30,\n        height: 30,\n        paddingRight: 7.4\n      },\n      id: \"uploadLogo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 434,\n        columnNumber: 33\n      }\n    }), \"IMPORT SUSPECTED CASES\")))), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 447,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(rb.Modal, {\n      show: this.state.showModal,\n      onHide: () => this.setState({\n        showModal: false\n      }),\n      animation: false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 448,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(rb.Modal.Header, {\n      closeButton: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 449,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(rb.Modal.Title, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 450,\n        columnNumber: 29\n      }\n    }, \"Upload Suspect Cases Files\")), /*#__PURE__*/React.createElement(rb.Modal.Body, {\n      className: \"d-flex justify-content-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 453,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 455,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \".col-md-6\",\n      style: {\n        paddingRight: 15\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 456,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 457,\n        columnNumber: 37\n      }\n    }, \"Profile of suspected case\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 458,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 459,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(rb.Button, {\n      variant: \"secondary\",\n      style: {\n        width: \"100%\"\n      },\n      onClick: this.handleClick.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 460,\n        columnNumber: 37\n      }\n    }, \"Upload\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"file\",\n      id: \"file\",\n      ref: \"fileUploader\",\n      style: {\n        display: \"none\"\n      },\n      onChange: this.uploadFile,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 463,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 464,\n        columnNumber: 37\n      }\n    }, \"File Chosen: \")), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        borderLeft: \"2px dashed black\",\n        height: \"100px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 467,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \".col-md-6\",\n      variant: \"primary\",\n      style: {\n        paddingLeft: 15\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 469,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 470,\n        columnNumber: 37\n      }\n    }, \"Movement of suspected case\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 471,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 472,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(rb.Button, {\n      variant: \"secondary\",\n      style: {\n        width: \"100%\"\n      },\n      onClick: this.handleClick2.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 473,\n        columnNumber: 37\n      }\n    }, \"Upload\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"file\",\n      id: \"file2\",\n      ref: \"fileUploader2\",\n      style: {\n        display: \"none\"\n      },\n      onChange: this.uploadFile2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 476,\n        columnNumber: 37\n      }\n    })))))), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 483,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(rb.Toast, {\n      onClose: () => this.setState({\n        error: false\n      }),\n      show: this.state.error,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 484,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(rb.Toast.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 485,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      className: \"mr-auto\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 486,\n        columnNumber: 29\n      }\n    }, \"Error!\")), /*#__PURE__*/React.createElement(rb.Toast.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 489,\n        columnNumber: 25\n      }\n    }, this.state.errorMsg))), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 493,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        display: displaySetting,\n        height: \"100%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 497,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      style: {\n        color: \"#424761\",\n        textAlign: \"center\",\n        marginTop: \"15%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 498,\n        columnNumber: 21\n      }\n    }, \"Import some data to begin\")), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        display: displaySetting2\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 500,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        textAlign: \"left\",\n        height: \"100%\",\n        float: \"left\",\n        width: \"50%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 501,\n        columnNumber: 21\n      }\n    }, graph1), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        float: \"left\",\n        width: \"50%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 504,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(rb.Tabs, {\n      defaultActiveKey: \"home\",\n      id: \"uncontrolled-tab-example\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 505,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(rb.Tab, {\n      eventKey: \"home\",\n      title: \"CONFIRMED CASES\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 506,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        textAlign: \"left\",\n        height: \"100%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 507,\n        columnNumber: 33\n      }\n    }, this.state.placename, this.convertSQLDate(this.state.datetime[0], this.state.datetime[1], \"header\"), /*#__PURE__*/React.createElement(Table, {\n      tableprops: mappingsCC,\n      display: displaySetting2,\n      type: \"CC\",\n      databack: this.databackTable,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 513,\n        columnNumber: 37\n      }\n    }))), /*#__PURE__*/React.createElement(rb.Tab, {\n      eventKey: \"profile\",\n      title: \"CLOSE CONTACT\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 517,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        textAlign: \"left\",\n        height: \"100%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 518,\n        columnNumber: 29\n      }\n    }, this.state.placename, this.convertSQLDate(this.state.datetime[0], this.state.datetime[1], \"header\"), /*#__PURE__*/React.createElement(Table, {\n      tableprops: mappingsclose,\n      display: displaySetting2,\n      type: \"PATP\",\n      databack: this.databackTable,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 523,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 524,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(rb.Button, {\n      onClick: () => this.setState({\n        showSelection: true\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 525,\n        columnNumber: 37\n      }\n    }, \"Manual Import\"))), /*#__PURE__*/React.createElement(rb.Tab, {\n      eventKey: \"contact\",\n      title: \"PUBLIC AT THE PLACE\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 531,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        textAlign: \"left\",\n        height: \"100%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 532,\n        columnNumber: 33\n      }\n    }, this.state.placename, this.convertSQLDate(this.state.datetime[0], this.state.datetime[1], \"header\"), /*#__PURE__*/React.createElement(Table, {\n      tableprops: mappingsPATP,\n      display: displaySetting2,\n      type: \"PATP\",\n      databack: this.databackTable,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 537,\n        columnNumber: 37\n      }\n    }))))), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 544,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(rb.Modal, {\n      show: this.state.showSelection,\n      onHide: () => this.setState({\n        showSelection: false\n      }),\n      centered: true,\n      size: \"xl\",\n      scrollable: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 545,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(rb.Modal.Header, {\n      closeButton: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 546,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(rb.Modal.Title, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 547,\n        columnNumber: 33\n      }\n    }, \"Transfer Users\")), /*#__PURE__*/React.createElement(rb.Modal.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 549,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        float: \"left\",\n        textAlign: \"center\",\n        width: \"40%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 550,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"text\", {\n      fontSize: \"20px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 551,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 551,\n        columnNumber: 59\n      }\n    }, \"Close Contact With Public\")), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        backgroundColor: \"#F9F9F9\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 552,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Table2, {\n      tableprops: mappingsclose,\n      display: displaySetting2,\n      type: \"modal-edit\",\n      callbackFromParent: this.myCallback2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 553,\n        columnNumber: 41\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        float: \"left\",\n        textAlign: \"center\",\n        width: \"20%\",\n        alignItems: \"center\",\n        justifyContent: \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 556,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(rb.Button, {\n      onClick: this.toCCClicked,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 557,\n        columnNumber: 37\n      }\n    }, \" < < \"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"clearfix\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 558,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(rb.Button, {\n      onClick: this.fromCCClicked,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 559,\n        columnNumber: 37\n      }\n    }, \" > > \")), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        float: \"right\",\n        textAlign: \"center\",\n        width: \"40%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 561,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"text\", {\n      fontSize: \"20px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 562,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 562,\n        columnNumber: 59\n      }\n    }, \"Public At The Place\")), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        backgroundColor: \"#F9F9F9\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 563,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Table, {\n      tableprops: mappingsPATP,\n      display: displaySetting2,\n      type: \"modal-edit\",\n      callbackFromParent: this.myCallback,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 564,\n        columnNumber: 41\n      }\n    })))), /*#__PURE__*/React.createElement(rb.Modal.Footer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 568,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(rb.Button, {\n      variant: \"secondary\",\n      onClick: () => this.setState({\n        showSelection: false\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 569,\n        columnNumber: 33\n      }\n    }, \"Close\"))))));\n  }\n\n}\n\nexport default TopNavBar;","map":{"version":3,"sources":["G:/INTERNSHIPFILES/CodingFolder/csit-website/src/Components/Navbar.js"],"names":["React","useRef","rb","Papa","axios","Graph","Table","Table2","TopNavBar","Component","constructor","props","myCallback","dataFromChild","setState","CCID","myCallback2","fromCCID","databackTable","console","log","toCCClicked","IDs","state","datas","length","placename","locationShortaddress","map","x","data","peopleProfileId","push","newItem","CloseContacts","fromCCClicked","filter","includes","uploadFile","bind","uploadFile2","handleClick","handleClick2","dropDownValue","dataList","suspectCases","movements","error","errorMsg","showModal","filenames","series","datetime","showSelection","importCompleted","list","handleData","e","refs","fileUploader","click","fileUploader2","event","file","target","files","name","reader","FileReader","onload","lols","parse","result","header","skipEmptyLines","names","firstName","lastName","readAsText","dropdownClicked","text","convertDate","date","lol","dateTimeParts","split","dateParts","timeParts","timeOfDay","finalDate","Date","getTime","populateGraph1","series2","forEach","suspect","moves","suspectId","id","movement","y","datetimeEntered","datetimeLeft","convertSQLDate","startDate1","endDate","type","undefined","date2","toString","time","date1","date21","time1","str","isEmptyObject","obj","Object","keys","compare","arr1","arr2","e1","i","e2","render","suspected","sus","Math","random","displaySetting","displaySetting2","seriesdata","test","graph1","graph11","that","options","chart","height","events","dataPointSelection","chartContext","config","seriesIndex","dataPointIndex","fetch","then","response","json","catch","err","plotOptions","bar","horizontal","barHeight","xaxis","stroke","width","fill","opacity","legend","position","horizontalAlign","mappingsCC","caseNumber","UID","place","mappingsPATP","newlist","newlist2","mappingsclose","fontSize","eventKey","textSize","paddingRight","display","borderLeft","paddingLeft","color","textAlign","marginTop","float","backgroundColor","alignItems","justifyContent"],"mappings":"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","sourcesContent":["import React, { useRef } from 'react'\r\nimport * as rb from 'react-bootstrap'\r\nimport {ReactComponent as Logo} from '../Imgs/upload.svg'\r\nimport Papa from 'papaparse'\r\nimport axios from 'axios'\r\nimport Graph from './Graphs'\r\nimport Table from './Table'\r\nimport Table2 from './Table2'\r\n// import Chip from '@material-ui/core/Chip';\r\n\r\n\r\nclass TopNavBar extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.uploadFile = this.uploadFile.bind(this);\r\n        this.uploadFile2 = this.uploadFile2.bind(this);\r\n        this.handleClick = this.handleClick.bind(this);\r\n        this.handleClick2 = this.handleClick2.bind(this);\r\n        this.state = {\r\n            dropDownValue: \"None\",\r\n            dataList: [\"None\"],\r\n            suspectCases: [],\r\n            movements: [],\r\n            error: false,\r\n            errorMsg: \"\",\r\n            showModal: false,\r\n            filenames: [],\r\n            series:{},\r\n            datas:[],\r\n            placename:\"\",\r\n            datetime:[],\r\n            showSelection: false,\r\n            CCID:[],\r\n            CloseContacts:{},\r\n            fromCCID:[],\r\n        }\r\n    }\r\n\r\n    importCompleted(){\r\n        const list = this.state\r\n        this.props.handleData(list)\r\n        return\r\n    }\r\n\r\n    handleClick(e) {\r\n        this.refs.fileUploader.click();\r\n    }\r\n\r\n    handleClick2(e) {\r\n        this.refs.fileUploader2.click();\r\n    }\r\n\r\n    uploadFile(event) {\r\n        \r\n        const file = event.target.files[0]\r\n\r\n        if(file){\r\n            if (file.name.includes(\"_suspected\")){\r\n\r\n                this.setState({filenames:[...this.state.filenames, file.name]})\r\n                const reader = new FileReader();\r\n                reader.onload = () => {\r\n                    // Use reader.result\r\n                    const lols = Papa.parse(reader.result, {header: true, skipEmptyLines: true}, )\r\n                    \r\n                    console.log(lols.data)\r\n    \r\n                    // Posting csv data into db\r\n                    // this.postData('\"' + JSON.stringify(lols.data) + '\"')\r\n                    // this.postSuspects(JSON.stringify(lols.data))\r\n    \r\n                    // Adds names into dropdown\r\n                    this.setState({dataList: [\"None\", ...lols.data.map(names => names.firstName + \" \" + names.lastName)]})\r\n    \r\n                    const data = lols.data\r\n                    this.setState({suspectCases: data})\r\n                }\r\n                reader.readAsText(file)\r\n            }\r\n            else{\r\n                this.setState({error:true, errorMsg:\"You have uploaded invalid files! Please rename the file to <filename>_suspected (For suspected cases)\"})\r\n                return\r\n            }\r\n        }\r\n    }\r\n\r\n    uploadFile2(event) {\r\n        \r\n        const file = event.target.files[0]\r\n\r\n        if(file){\r\n            if (file.name.includes(\"_movements\")){\r\n                \r\n                this.setState({filenames:[...this.state.filenames, file.name]})\r\n                const reader = new FileReader();\r\n                reader.onload = () => {\r\n                    // Use reader.result\r\n                    const lols = Papa.parse(reader.result, {header: true, skipEmptyLines: true}, )\r\n                    \r\n                    console.log(lols.data)\r\n    \r\n                    // Posting csv data into db\r\n                    // this.postData('\"' + JSON.stringify(lols.data) + '\"')\r\n                    // this.postMovements(JSON.stringify(lols.data))\r\n                    const data = lols.data\r\n                    this.setState({movements: data})\r\n                }\r\n                reader.readAsText(file)\r\n            }\r\n            else{\r\n                this.setState({error:true, errorMsg:\"You have uploaded invalid files! Please rename the file to <filename>_movement (For suspected case movement)\"})\r\n                return\r\n            }\r\n        }\r\n    }\r\n\r\n    dropdownClicked(text) {\r\n        this.setState({dropDownValue: text})\r\n    }\r\n\r\n    convertDate(date) {\r\n\r\n        var lol = date\r\n        var dateTimeParts = lol.split(' ')\r\n        // console.log(dateTimeParts)\r\n        var dateParts = dateTimeParts[0].split('/')\r\n        var timeParts = dateTimeParts[1].split(':')\r\n        var timeOfDay = dateTimeParts[2]\r\n        if(timeOfDay === \"pm\"){\r\n            timeParts[0] += 12\r\n        }\r\n\r\n        // new Date(year, month, day, hours, minutes, seconds, milliseconds)\r\n        var finalDate = new Date(dateParts[2], dateParts[1] - 1, dateParts[0], timeParts[0], timeParts[1]);\r\n        // console.log(finalDate)\r\n        return finalDate.getTime();\r\n    }\r\n\r\n    populateGraph1(){\r\n        let series2 = []\r\n        this.state.suspectCases.forEach(suspect => {\r\n            let data = []\r\n\r\n            this.state.movements.filter(moves => moves.suspectId === suspect.id).forEach(movement => {\r\n                data.push(\r\n                    {\r\n                        x: movement.locationShortaddress,\r\n                        y: [this.convertDate(movement.datetimeEntered),this.convertDate(movement.datetimeLeft)]\r\n                    }\r\n                )\r\n            })\r\n\r\n            series2.push(\r\n                {\r\n                    name: suspect.firstName + \" \" + suspect.lastName,\r\n                    data: data\r\n                }\r\n            )\r\n        })\r\n        return series2\r\n    }\r\n\r\n    convertSQLDate(startDate1, endDate, type = undefined){\r\n        \r\n        if(startDate1 !== undefined && endDate !== undefined){\r\n            var date = new Date(startDate1)\r\n            var date2 = date.toString().split(\" \")\r\n            var time = date2[4].split(\":\")\r\n    \r\n            var date1 = new Date(endDate)\r\n            var date21 = date1.toString().split(\" \")\r\n            var time1 = date21[4].split(\":\")\r\n            \r\n            let str\r\n            if(type === \"header\"){\r\n                str = time[0] + \":\"+ time[1] + \" - \" + time1[0] + \":\" + time1[1]\r\n            }\r\n            else{\r\n                str = date2[2] + \" \" + date2[1] + \", \" + time[0] + \":\"+ time[1] + \" - \" + time1[0] + \":\" + time1[1]\r\n            }\r\n           \r\n            return str\r\n        }\r\n        // return date2[1]\r\n    }\r\n\r\n    // Still kkeeps adding values to the list\r\n    myCallback = (dataFromChild) => {\r\n        // console.log(\"Data1:\" + dataFromChild)\r\n        this.setState({CCID:dataFromChild})\r\n    }\r\n\r\n    myCallback2 = (dataFromChild) => {\r\n        // console.log(\"Data2:\" + dataFromChild)\r\n        this.setState({fromCCID:dataFromChild})\r\n    }\r\n\r\n    databackTable = (dataFromChild) => {\r\n        console.log(\"Modal Data:\" + dataFromChild)\r\n        // this.setState({fromCCID:dataFromChild})\r\n    }\r\n\r\n    isEmptyObject(obj) {\r\n        return !!obj && Object.keys(obj).length === 0 && obj.constructor === Object;\r\n    }\r\n\r\n    toCCClicked = () => {\r\n        let IDs = []\r\n\r\n        if(this.state.datas.length > 0){\r\n            let placename = this.state.datas[0].locationShortaddress\r\n            // console.log(this.state.CCID)\r\n            this.state.datas.map(x => {\r\n                for(var data of this.state.CCID){\r\n    \r\n                    // console.log(data)\r\n                    if(x.peopleProfileId == data){\r\n                        IDs.push(x.peopleProfileId)\r\n                    }\r\n                }\r\n                \r\n            })\r\n\r\n            console.log(\"TO: \" + IDs)\r\n            \r\n            let newItem = {...this.state.CloseContacts, [placename]:IDs}\r\n\r\n            this.setState({CloseContacts:newItem}) \r\n        }\r\n    }\r\n\r\n    compare(arr1,arr2){\r\n  \r\n        if(!arr1  || !arr2) return\r\n       \r\n        let result;\r\n       \r\n        arr1.forEach((e1,i)=>arr2.forEach(e2=>{\r\n         \r\n            if(e1.length > 1 && e2.length){\r\n                result = this.compare(e1,e2);\r\n            }else if(e1 !== e2 ){\r\n                result = false\r\n            }else{\r\n                result = true\r\n            }\r\n        }))\r\n       return result\r\n    }\r\n\r\n    fromCCClicked = () => {\r\n\r\n        if(this.state.datas.length > 0){\r\n            let placename = this.state.datas[0].locationShortaddress\r\n            let IDs = this.state.CloseContacts[placename].filter(x => this.state.fromCCID.includes(x) === false).map(x => {return x})\r\n            \r\n            console.log(\"From: \" + IDs)\r\n\r\n            let newItem = {...this.state.CloseContacts, [placename]:IDs}\r\n\r\n            console.log(\"Items:\" + newItem)\r\n\r\n            this.setState({CloseContacts:newItem}) \r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        let suspected = this.state.dataList.map(sus => <rb.NavDropdown.Item eventKey={Math.random()}>{sus}</rb.NavDropdown.Item>)\r\n        \r\n        let displaySetting, displaySetting2, seriesdata\r\n        let test\r\n\r\n        if(this.state.suspectCases.length > 0 && this.state.movements.length > 0 ){\r\n            displaySetting = \"none\"\r\n            displaySetting2 = \"block\"\r\n            \r\n            test = this.populateGraph1()\r\n        }\r\n        else{\r\n            displaySetting = \"block\"\r\n            displaySetting2 = \"none\"\r\n        }\r\n        \r\n        let graph1, graph11\r\n\r\n        const that = this;\r\n\r\n        let placename;\r\n\r\n        if(test !== undefined){\r\n            var options = {\r\n                options: {\r\n                    chart: {\r\n                        height: 450, \r\n                        type: 'rangeBar',\r\n                        events:{\r\n                            dataPointSelection: function(event, chartContext, config) {\r\n                                // Name of place\r\n                                // console.log(test[config.seriesIndex].data[config.dataPointIndex].x)\r\n\r\n                                that.setState({placename:test[config.seriesIndex].data[config.dataPointIndex].x, datetime:test[config.seriesIndex].data[config.dataPointIndex].y})\r\n\r\n                                // For the time\r\n                                // console.log(test[config.seriesIndex].data[config.dataPointIndex].y)\r\n                                // For the Name\r\n                                // console.log(test[config.seriesIndex].name)\r\n\r\n                                placename = test[config.seriesIndex].data[config.dataPointIndex].x\r\n\r\n                                fetch(\"http://localhost:8080/getMovementForDate?placeName=\"+ test[config.seriesIndex].data[config.dataPointIndex].x +\"&dates=\" + test[config.seriesIndex].data[config.dataPointIndex].y + \"&personName=\" + test[config.seriesIndex].name)\r\n                                .then(response => response.json()).then(data => that.setState({datas:data})).catch(err => {console.log(err);});\r\n                            }\r\n                        }\r\n                    },\r\n                    plotOptions: {\r\n                      bar: {horizontal: true, barHeight: '80%'}\r\n                    },\r\n                    xaxis: {\r\n                      type: 'datetime'\r\n                    },\r\n                    stroke: {\r\n                      width: 1\r\n                    },\r\n                    fill: {\r\n                      type: 'solid',\r\n                      opacity: 0.6\r\n                    },\r\n                    legend: {\r\n                      position: 'top',\r\n                      horizontalAlign: 'left'\r\n                    }\r\n                }\r\n            }\r\n            graph1 = <Graph display={displaySetting2} options={options.options} series={test} tool/>\r\n        }\r\n\r\n        let mappingsCC = this.state.datas.filter(data => data.caseNumber != null).map(data => {\r\n            return({\r\n                caseNumber:data.caseNumber,\r\n                UID:data.peopleProfileId,\r\n                name:data.firstName + \" \" + data.lastName,\r\n                place:data.locationShortaddress,\r\n                datetime:this.convertSQLDate(data.datetimeEntered, data.datetimeLeft)\r\n            })\r\n        })\r\n\r\n        let mappingsPATP\r\n        \r\n        // Checks if there are any close contacts be begin with. If there are none than the below will run\r\n        if(this.isEmptyObject(this.state.CloseContacts)){\r\n            mappingsPATP = this.state.datas.filter(data => data.caseNumber == null).map(data =>{\r\n                return({\r\n                    UID:data.peopleProfileId,\r\n                    name:data.firstName + \" \" + data.lastName,\r\n                    place:data.locationShortaddress,\r\n                    datetime:this.convertSQLDate(data.datetimeEntered, data.datetimeLeft)\r\n                })\r\n            })\r\n        }\r\n\r\n        // If you added the close contacts, no need to be for the current place (any place), then the below will run\r\n        else{\r\n            \r\n            let newlist = []\r\n\r\n            this.state.datas.filter(data => data.caseNumber == null).map(data =>{\r\n\r\n                // Checks if the place that the user has clicked on contains any close contacts assigned to it. If there are, then it will take away all the people that are in the close \r\n                // contact list from the PATP\r\n                if(this.state.CloseContacts[data.locationShortaddress] != undefined){\r\n                    // console.log(\"Logged: \" + this.state.CloseContacts[placename] + \": \" + Array.isArray(this.state.CloseContacts[placename]))\r\n                    if(this.state.CloseContacts[data.locationShortaddress].includes(data.peopleProfileId) === false){\r\n                        newlist.push({\r\n                            UID:data.peopleProfileId,\r\n                            name:data.firstName + \" \" + data.lastName,\r\n                            place:data.locationShortaddress,\r\n                            datetime:this.convertSQLDate(data.datetimeEntered, data.datetimeLeft)\r\n                        })\r\n                    }\r\n                }\r\n\r\n                // If there isnt any close contacts then it will just return all the people from the PTAP back to PTAP\r\n                else{\r\n                    newlist.push({\r\n                        UID:data.peopleProfileId,\r\n                        name:data.firstName + \" \" + data.lastName,\r\n                        place:data.locationShortaddress,\r\n                        datetime:this.convertSQLDate(data.datetimeEntered, data.datetimeLeft)\r\n                    })\r\n                }       \r\n            })\r\n\r\n            mappingsPATP = newlist\r\n        }\r\n\r\n        let newlist2 = []\r\n\r\n        this.state.datas.filter(data => data.caseNumber == null).map(data =>{\r\n            \r\n            if(this.state.CloseContacts[data.locationShortaddress] != undefined){\r\n                if(this.state.CloseContacts[data.locationShortaddress].includes(data.peopleProfileId)){\r\n                    newlist2.push({\r\n                        UID:data.peopleProfileId,\r\n                        name:data.firstName + \" \" + data.lastName,\r\n                        place:data.locationShortaddress,\r\n                        datetime:this.convertSQLDate(data.datetimeEntered, data.datetimeLeft)\r\n                    })\r\n                }\r\n            }  \r\n        })\r\n\r\n        let mappingsclose = newlist2\r\n\r\n        return (\r\n            <div>\r\n                <div>\r\n                    <rb.Navbar bg=\"white\">\r\n                        <rb.Navbar.Brand style={{fontSize:30}}>\r\n                            Filter:\r\n                        </rb.Navbar.Brand>\r\n                        <rb.Navbar.Toggle />\r\n                        <rb.Nav onSelect={(eventKey) => this.dropdownClicked(eventKey)}>\r\n                            <rb.NavDropdown title={this.state.dropDownValue}>\r\n                                {suspected}\r\n                            </rb.NavDropdown>\r\n                        </rb.Nav>\r\n                        <rb.Navbar.Collapse className=\"justify-content-end\">\r\n\r\n                            <rb.Button className=\"text-right\" id=\"importCases\" style={{textSize:15}} onClick={() => this.setState({showModal: true})}>\r\n                                <Logo style={{width:30, height:30, paddingRight:7.4}} id=\"uploadLogo\"/>\r\n                                IMPORT SUSPECTED CASES\r\n                            </rb.Button>\r\n\r\n                            {/* <rb.Button className=\"text-right\" id=\"importCases\" style={{textSize:15}} onClick={this.handleClick.bind(this)}>\r\n                                <Logo style={{width:30, height:30, paddingRight:7.4}} id=\"uploadLogo\"/>\r\n                                IMPORT SUSPECTED CASES\r\n                            </rb.Button>\r\n                            <input type=\"file\" id=\"file\" ref=\"fileUploader\" style={{display: \"none\"}} onChange={this.uploadFile} multiple/> */}\r\n                        </rb.Navbar.Collapse>\r\n                    </rb.Navbar>\r\n                </div>\r\n                \r\n                <div>\r\n                    <rb.Modal show={this.state.showModal} onHide={() => this.setState({showModal: false}) } animation={false}>\r\n                        <rb.Modal.Header closeButton>\r\n                            <rb.Modal.Title>Upload Suspect Cases Files</rb.Modal.Title>\r\n                        </rb.Modal.Header>\r\n\r\n                        <rb.Modal.Body className=\"d-flex justify-content-center\">\r\n\r\n                            <div className=\"row\" >\r\n                                <div className=\".col-md-6\" style={{paddingRight: 15}}>\r\n                                    <b>Profile of suspected case</b>\r\n                                    <br/>\r\n                                    <br/>\r\n                                    <rb.Button variant=\"secondary\" style={{width:\"100%\"}} onClick={this.handleClick.bind(this)}>\r\n                                        Upload\r\n                                    </rb.Button>\r\n                                    <input type=\"file\" id=\"file\" ref=\"fileUploader\" style={{display: \"none\"}} onChange={this.uploadFile}/>\r\n                                    <p>File Chosen: </p>\r\n                                </div>\r\n\r\n                                <div style ={{borderLeft: \"2px dashed black\", height: \"100px\"}}></div>\r\n\r\n                                <div className=\".col-md-6\" variant=\"primary\" style={{paddingLeft: 15}}>\r\n                                    <b>Movement of suspected case</b>\r\n                                    <br/>\r\n                                    <br/>\r\n                                    <rb.Button variant=\"secondary\" style={{width:\"100%\"}} onClick={this.handleClick2.bind(this)}>\r\n                                        Upload\r\n                                    </rb.Button>\r\n                                    <input type=\"file\" id=\"file2\" ref=\"fileUploader2\" style={{display: \"none\"}} onChange={this.uploadFile2}/>\r\n                                </div>\r\n                            </div>\r\n                        </rb.Modal.Body>\r\n                    </rb.Modal>\r\n                </div>\r\n\r\n                <div>\r\n                    <rb.Toast onClose={() => this.setState({error: false})} show={this.state.error}>\r\n                        <rb.Toast.Header>\r\n                            <strong className=\"mr-auto\">Error!</strong>\r\n                            {/* <small>11 mins ago</small> */}\r\n                        </rb.Toast.Header>\r\n                        <rb.Toast.Body>{this.state.errorMsg}</rb.Toast.Body>\r\n                    </rb.Toast>\r\n                </div>\r\n                \r\n                <div>\r\n                    {/* {this.state.suspectCases} */}\r\n                </div>\r\n\r\n                <div style={{display:displaySetting, height:\"100%\"}}>\r\n                    <h1 style={{color:\"#424761\", textAlign:\"center\", marginTop:\"15%\"}}>Import some data to begin</h1>\r\n                </div>\r\n                <div style={{display:displaySetting2}}>\r\n                    <div style={{textAlign: \"left\", height:\"100%\", float:\"left\", width:\"50%\"}}>\r\n                        {graph1}\r\n                    </div>\r\n                    <div style={{float:\"left\", width:\"50%\"}}>\r\n                        <rb.Tabs defaultActiveKey=\"home\" id=\"uncontrolled-tab-example\">\r\n                            <rb.Tab eventKey=\"home\" title=\"CONFIRMED CASES\">\r\n                                <div style={{textAlign: \"left\", height:\"100%\"}}>\r\n                                    {/* <Chip label=\"Basic\" /> */}\r\n                                    {/* PlaceName */}\r\n                                    {this.state.placename}\r\n                                    {/* Time Span */}\r\n                                    {this.convertSQLDate(this.state.datetime[0], this.state.datetime[1], \"header\")}\r\n                                    <Table tableprops={mappingsCC} display={displaySetting2} type = \"CC\" databack={this.databackTable}/>\r\n                                </div>\r\n                            </rb.Tab>\r\n\r\n                            <rb.Tab eventKey=\"profile\" title=\"CLOSE CONTACT\">\r\n                            <div style={{textAlign: \"left\", height:\"100%\"}}>\r\n                                    {/* PlaceName */}\r\n                                    {this.state.placename}\r\n                                    {/* Time Span */}\r\n                                    {this.convertSQLDate(this.state.datetime[0], this.state.datetime[1], \"header\")}\r\n                                    <Table tableprops={mappingsclose} display={displaySetting2} type=\"PATP\" databack={this.databackTable}/>\r\n                                    <br/>\r\n                                    <rb.Button onClick={() => this.setState({showSelection:true})}>\r\n                                        Manual Import\r\n                                    </rb.Button>\r\n                                </div>\r\n                            </rb.Tab>\r\n\r\n                            <rb.Tab eventKey=\"contact\" title=\"PUBLIC AT THE PLACE\">\r\n                                <div style={{textAlign: \"left\", height:\"100%\"}}>\r\n                                    {/* PlaceName */}\r\n                                    {this.state.placename}\r\n                                    {/* Time Span */}\r\n                                    {this.convertSQLDate(this.state.datetime[0], this.state.datetime[1], \"header\")}\r\n                                    <Table tableprops={mappingsPATP} display={displaySetting2} type=\"PATP\" databack={this.databackTable}/>\r\n                                </div>\r\n                            </rb.Tab>\r\n                        </rb.Tabs>         \r\n                    </div>\r\n                    \r\n                    {/* PTAP TO CC AND CC TO PTAP */}\r\n                    <div>\r\n                        <rb.Modal show={this.state.showSelection} onHide={()=>this.setState({showSelection:false})} centered size=\"xl\" scrollable={true}>\r\n                            <rb.Modal.Header closeButton>\r\n                                <rb.Modal.Title>Transfer Users</rb.Modal.Title>\r\n                            </rb.Modal.Header>\r\n                            <rb.Modal.Body>\r\n                                <div style={{float:\"left\", textAlign:\"center\", width:\"40%\"}}>\r\n                                    <text fontSize=\"20px\"><b>Close Contact With Public</b></text>\r\n                                    <div style={{backgroundColor:\"#F9F9F9\", }}>\r\n                                        <Table2 tableprops={mappingsclose} display={displaySetting2} type=\"modal-edit\" callbackFromParent={this.myCallback2}/>\r\n                                    </div>\r\n                                </div>\r\n                                <div style={{float:\"left\", textAlign:\"center\", width:\"20%\", alignItems:\"center\", justifyContent:\"center\"}}>\r\n                                    <rb.Button onClick={this.toCCClicked}> &lt; &lt; </rb.Button>\r\n                                    <div className=\"clearfix\"></div>\r\n                                    <rb.Button onClick={this.fromCCClicked}> &gt; &gt; </rb.Button>\r\n                                </div>\r\n                                <div style={{float:\"right\", textAlign:\"center\", width:\"40%\"}}>\r\n                                    <text fontSize=\"20px\"><b>Public At The Place</b></text>\r\n                                    <div style={{backgroundColor:\"#F9F9F9\"}}>\r\n                                        <Table tableprops={mappingsPATP} display={displaySetting2} type=\"modal-edit\" callbackFromParent={this.myCallback}/>\r\n                                    </div>\r\n                                </div>\r\n                            </rb.Modal.Body>\r\n                            <rb.Modal.Footer>\r\n                                <rb.Button variant=\"secondary\" onClick={()=>this.setState({showSelection:false})}>\r\n                                    Close\r\n                                </rb.Button>\r\n                            </rb.Modal.Footer>\r\n                        </rb.Modal>\r\n                    </div>\r\n                    \r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default TopNavBar"]},"metadata":{},"sourceType":"module"}