{"ast":null,"code":"var _jsxFileName = \"G:\\\\INTERNSHIPFILES\\\\CodingFolder\\\\csit-website\\\\src\\\\Components\\\\Topnav.js\";\nimport React, { useRef } from 'react';\nimport * as rb from 'react-bootstrap';\nimport { ReactComponent as Logo } from \"@svgr/webpack?-svgo,+titleProp,+ref!../Imgs/upload.svg\";\nimport Papa from 'papaparse';\n\nfunction readFile(event) {\n  let file = event.target.files[0];\n  console.log(file); // if (file) {\n  //     const reader = new FileReader();\n  //     reader.onload = function(e) {\n  //         // Use reader.result\n  //         const lols = Papa.parse(reader.result, {\n  //             header: true\n  //           });\n  //         lols.data.forEach(name => {\n  //            setName(name.Name)\n  //         });\n  //     }\n  //     reader.readAsText(file)\n  // }\n}\n\nfunction TopNavBar() {\n  const inputFile = useRef(null);\n  let suspectName = [\"None\"];\n\n  const onButtonClick = () => {\n    // `current` points to the mounted file input element\n    inputFile.current.click();\n  };\n\n  let suspected = suspectName.map(sus => /*#__PURE__*/React.createElement(rb.NavDropdown.Item, {\n    eventKey: sus,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 44\n    }\n  }, sus));\n  return /*#__PURE__*/React.createElement(rb.Navbar, {\n    bg: \"white\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(rb.Navbar.Brand, {\n    style: {\n      fontSize: 30\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }\n  }, \"Filter:\"), /*#__PURE__*/React.createElement(rb.Navbar.Toggle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(rb.Nav, {\n    onSelect: eventKey => this.dropdownClicked(eventKey),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(rb.NavDropdown, {\n    title: suspectName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 21\n    }\n  }, suspected)), /*#__PURE__*/React.createElement(rb.Navbar.Collapse, {\n    className: \"justify-content-end\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(rb.Button, {\n    className: \"text-right\",\n    id: \"importCases\",\n    style: {\n      textSize: 15\n    },\n    onClick: onButtonClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Logo, {\n    style: {\n      width: 30,\n      height: 30,\n      paddingRight: 7.4\n    },\n    id: \"uploadLogo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 25\n    }\n  }), \"IMPORT SUSPECTED CASES\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    id: \"file\",\n    ref: inputFile,\n    style: {\n      display: 'none'\n    },\n    onChange: readFile,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 21\n    }\n  })));\n}\n\nexport default TopNavBar;","map":{"version":3,"sources":["G:/INTERNSHIPFILES/CodingFolder/csit-website/src/Components/Topnav.js"],"names":["React","useRef","rb","Papa","readFile","event","file","target","files","console","log","TopNavBar","inputFile","suspectName","onButtonClick","current","click","suspected","map","sus","fontSize","eventKey","dropdownClicked","textSize","width","height","paddingRight","display"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,MAAhB,QAA8B,OAA9B;AACA,OAAO,KAAKC,EAAZ,MAAoB,iBAApB;;AAEA,OAAOC,IAAP,MAAiB,WAAjB;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAwB;AACpB,MAAIC,IAAI,GAAGD,KAAK,CAACE,MAAN,CAAaC,KAAb,CAAmB,CAAnB,CAAX;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAZ,EAHoB,CAIhB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACP;;AAGD,SAASK,SAAT,GAAoB;AAEhB,QAAMC,SAAS,GAAGX,MAAM,CAAC,IAAD,CAAxB;AAEA,MAAIY,WAAW,GAAG,CAAC,MAAD,CAAlB;;AAEA,QAAMC,aAAa,GAAG,MAAM;AACxB;AACDF,IAAAA,SAAS,CAACG,OAAV,CAAkBC,KAAlB;AACA,GAHH;;AAKA,MAAIC,SAAS,GAAGJ,WAAW,CAACK,GAAZ,CAAgBC,GAAG,iBAAI,oBAAC,EAAD,CAAI,WAAJ,CAAgB,IAAhB;AAAqB,IAAA,QAAQ,EAAEA,GAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAqCA,GAArC,CAAvB,CAAhB;AAEA,sBACI,oBAAC,EAAD,CAAI,MAAJ;AAAW,IAAA,EAAE,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACQ,oBAAC,EAAD,CAAI,MAAJ,CAAW,KAAX;AAAiB,IAAA,KAAK,EAAE;AAACC,MAAAA,QAAQ,EAAC;AAAV,KAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADR,eAIQ,oBAAC,EAAD,CAAI,MAAJ,CAAW,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJR,eAKQ,oBAAC,EAAD,CAAI,GAAJ;AAAQ,IAAA,QAAQ,EAAGC,QAAD,IAAc,KAAKC,eAAL,CAAqBD,QAArB,CAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,EAAD,CAAI,WAAJ;AAAgB,IAAA,KAAK,EAAER,WAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKI,SADL,CADJ,CALR,eAUQ,oBAAC,EAAD,CAAI,MAAJ,CAAW,QAAX;AAAoB,IAAA,SAAS,EAAC,qBAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,EAAD,CAAI,MAAJ;AAAW,IAAA,SAAS,EAAC,YAArB;AAAkC,IAAA,EAAE,EAAC,aAArC;AAAmD,IAAA,KAAK,EAAE;AAACM,MAAAA,QAAQ,EAAC;AAAV,KAA1D;AAAyE,IAAA,OAAO,EAAET,aAAlF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAACU,MAAAA,KAAK,EAAC,EAAP;AAAWC,MAAAA,MAAM,EAAC,EAAlB;AAAsBC,MAAAA,YAAY,EAAC;AAAnC,KAAb;AAAsD,IAAA,EAAE,EAAC,YAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,2BADJ,eAKI;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,EAAE,EAAC,MAAtB;AAA6B,IAAA,GAAG,EAAEd,SAAlC;AAA6C,IAAA,KAAK,EAAE;AAACe,MAAAA,OAAO,EAAE;AAAV,KAApD;AAAuE,IAAA,QAAQ,EAAEvB,QAAjF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALJ,CAVR,CADJ;AAoBH;;AAED,eAAeO,SAAf","sourcesContent":["import React, { useRef } from 'react'\r\nimport * as rb from 'react-bootstrap'\r\nimport {ReactComponent as Logo} from '../Imgs/upload.svg'\r\nimport Papa from 'papaparse'\r\n\r\nfunction readFile(event){\r\n    let file = event.target.files[0];\r\n\r\n    console.log(file);\r\n        // if (file) {\r\n        //     const reader = new FileReader();\r\n        //     reader.onload = function(e) {\r\n        //         // Use reader.result\r\n        //         const lols = Papa.parse(reader.result, {\r\n        //             header: true\r\n        //           });\r\n        //         lols.data.forEach(name => {\r\n        //            setName(name.Name)\r\n        //         });\r\n        //     }\r\n        //     reader.readAsText(file)\r\n        // }\r\n}\r\n\r\n\r\nfunction TopNavBar(){\r\n\r\n    const inputFile = useRef(null) \r\n\r\n    let suspectName = [\"None\"]\r\n\r\n    const onButtonClick = () => {\r\n        // `current` points to the mounted file input element\r\n       inputFile.current.click();\r\n      };\r\n\r\n    let suspected = suspectName.map(sus => <rb.NavDropdown.Item eventKey={sus}>{sus}</rb.NavDropdown.Item>)\r\n\r\n    return (\r\n        <rb.Navbar bg=\"white\">\r\n                <rb.Navbar.Brand style={{fontSize:30}}>\r\n                    Filter:\r\n                </rb.Navbar.Brand>\r\n                <rb.Navbar.Toggle />\r\n                <rb.Nav onSelect={(eventKey) => this.dropdownClicked(eventKey)}>\r\n                    <rb.NavDropdown title={suspectName}>\r\n                        {suspected}\r\n                    </rb.NavDropdown>\r\n                </rb.Nav>\r\n                <rb.Navbar.Collapse className=\"justify-content-end\">\r\n                    <rb.Button className=\"text-right\" id=\"importCases\" style={{textSize:15}} onClick={onButtonClick}>\r\n                        <Logo style={{width:30, height:30, paddingRight:7.4}} id=\"uploadLogo\"/>\r\n                        IMPORT SUSPECTED CASES\r\n                    </rb.Button>\r\n                    <input type='file' id='file' ref={inputFile} style={{display: 'none'}} onChange={readFile}/>\r\n                </rb.Navbar.Collapse>\r\n            </rb.Navbar>\r\n    )\r\n}\r\n\r\nexport default TopNavBar"]},"metadata":{},"sourceType":"module"}