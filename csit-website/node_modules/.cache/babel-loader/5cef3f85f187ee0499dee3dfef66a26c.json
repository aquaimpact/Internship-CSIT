{"ast":null,"code":"var _jsxFileName = \"G:\\\\INTERNSHIPFILES\\\\CodingFolder\\\\csit-website\\\\src\\\\Components\\\\maps.js\";\nimport React from 'react';\nimport mapboxgl from 'mapbox-gl';\nmapboxgl.accessToken = 'pk.eyJ1IjoiYXF1YWltcGFjdCIsImEiOiJja2R0d2N3emswdzlwMnptcGliNTk4ZHNkIn0.jPYEzZD-aErgL25Zx9N_Kg';\n\nclass Maps extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      lng: 103.851959,\n      lat: 1.290270,\n      zoom: 9.5,\n      movements: []\n    };\n    this.mapContainer = React.createRef();\n  }\n\n  getMovements(id) {\n    fetch(`http://localhost:8080/getMovementbyID?IDs=${id}`).then(r => r.json()).then(data => this.setState({\n      movements: data\n    }));\n  }\n\n  render() {\n    this.getMovements(this.props.UID);\n    const map = new mapboxgl.Map({\n      container: this.mapContainer,\n      style: 'mapbox://styles/mapbox/streets-v11',\n      center: [this.state.lng, this.state.lat],\n      zoom: this.state.zoom\n    });\n    map.on('load', function () {\n      var mapCanvas = document.getElementsByClassName('mapboxgl-canvas')[0];\n      map.loadImage('https://docs.mapbox.com/mapbox-gl-js/assets/custom_marker.png', // Add an image to use as a custom marker\n      function (error, image) {\n        if (error) throw error;\n        map.addImage('custom-marker', image);\n        map.addSource('places', {\n          'type': 'geojson',\n          'data': {\n            'type': 'FeatureCollection',\n            'features': [{\n              'type': 'Feature',\n              'properties': {\n                'description': '<strong>Make it Mount Pleasant</strong><p>Make it Mount Pleasant is a handmade and vintage market and afternoon of live entertainment and kids activities. 12:00-6:00 p.m.</p>'\n              },\n              'geometry': {\n                'type': 'Point',\n                'coordinates': [-77.038659, 38.931567]\n              }\n            }]\n          }\n        }); // Add a layer showing the places.\n\n        map.addLayer({\n          'id': 'places',\n          'type': 'symbol',\n          'source': 'places',\n          'layout': {\n            'icon-image': 'custom-marker',\n            'icon-allow-overlap': true\n          }\n        });\n        map.addSource('route', {\n          'type': 'geojson',\n          'data': {\n            'type': 'Feature',\n            'properties': {},\n            'geometry': {\n              'type': 'LineString',\n              'coordinates': [[-122.48369693756104, 37.83381888486939], [-122.48348236083984, 37.83317489144141], [-122.48339653015138, 37.83270036637107], [-122.48356819152832, 37.832056363179625], [-122.48404026031496, 37.83114119107971], [-122.48404026031496, 37.83049717427869], [-122.48348236083984, 37.829920943955045], [-122.48356819152832, 37.82954808664175], [-122.48507022857666, 37.82944639795659], [-122.48610019683838, 37.82880236636284], [-122.48695850372314, 37.82931081282506], [-122.48700141906738, 37.83080223556934], [-122.48751640319824, 37.83168351665737], [-122.48803138732912, 37.832158048267786], [-122.48888969421387, 37.83297152392784], [-122.48987674713133, 37.83263257682617], [-122.49043464660643, 37.832937629287755], [-122.49125003814696, 37.832429207817725], [-122.49163627624512, 37.832564787218985], [-122.49223709106445, 37.83337825839438], [-122.49378204345702, 37.83368330777276]]\n            }\n          }\n        });\n        map.addLayer({\n          'id': 'route',\n          'type': 'line',\n          'source': 'route',\n          'layout': {\n            'line-join': 'round',\n            'line-cap': 'round'\n          },\n          'paint': {\n            'line-color': '#888',\n            'line-width': 8\n          }\n        });\n      }); // Create a popup, but don't add it to the map yet.\n\n      var popup = new mapboxgl.Popup({\n        closeButton: false,\n        closeOnClick: false\n      });\n      map.on('mouseenter', 'places', function (e) {\n        // Change the cursor style as a UI indicator.\n        map.getCanvas().style.cursor = 'pointer';\n        var coordinates = e.features[0].geometry.coordinates.slice();\n        var description = e.features[0].properties.description; // Ensure that if the map is zoomed out such that multiple\n        // copies of the feature are visible, the popup appears\n        // over the copy being pointed to.\n\n        while (Math.abs(e.lngLat.lng - coordinates[0]) > 180) {\n          coordinates[0] += e.lngLat.lng > coordinates[0] ? 360 : -360;\n        } // Populate the popup and set its coordinates\n        // based on the feature found.\n\n\n        popup.setLngLat(coordinates).setHTML(description).addTo(map);\n      });\n      map.on('mouseleave', 'places', function () {\n        map.getCanvas().style.cursor = '';\n        popup.remove();\n      });\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        position: \"relative\",\n        height: \"300px\",\n        width: \"100%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      ref: el => this.mapContainer = el,\n      style: {\n        position: \"reletive\",\n        width: \"inherit\",\n        height: \"inherit\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nexport default Maps;","map":{"version":3,"sources":["G:/INTERNSHIPFILES/CodingFolder/csit-website/src/Components/maps.js"],"names":["React","mapboxgl","accessToken","Maps","Component","constructor","props","state","lng","lat","zoom","movements","mapContainer","createRef","getMovements","id","fetch","then","r","json","data","setState","render","UID","map","Map","container","style","center","on","mapCanvas","document","getElementsByClassName","loadImage","error","image","addImage","addSource","addLayer","popup","Popup","closeButton","closeOnClick","e","getCanvas","cursor","coordinates","features","geometry","slice","description","properties","Math","abs","lngLat","setLngLat","setHTML","addTo","remove","position","height","width","el"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport mapboxgl from 'mapbox-gl';\r\n\r\nmapboxgl.accessToken = 'pk.eyJ1IjoiYXF1YWltcGFjdCIsImEiOiJja2R0d2N3emswdzlwMnptcGliNTk4ZHNkIn0.jPYEzZD-aErgL25Zx9N_Kg';\r\n\r\nclass Maps extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props)\r\n        \r\n        this.state = {\r\n            lng: 103.851959,\r\n            lat: 1.290270,\r\n            zoom: 9.5,\r\n            movements:[],\r\n        };\r\n\r\n        this.mapContainer = React.createRef();\r\n        \r\n    }\r\n\r\n    getMovements(id){\r\n        fetch(`http://localhost:8080/getMovementbyID?IDs=${id}`).then(r => r.json()).then(data => this.setState({movements:data}))\r\n    }\r\n\r\n    render(){\r\n        this.getMovements(this.props.UID)\r\n\r\n        const map = new mapboxgl.Map({\r\n            container: this.mapContainer,\r\n            style: 'mapbox://styles/mapbox/streets-v11',\r\n            center: [this.state.lng, this.state.lat],\r\n            zoom: this.state.zoom\r\n        });\r\n\r\n        map.on('load', function() {\r\n            \r\n            var mapCanvas = document.getElementsByClassName('mapboxgl-canvas')[0];\r\n\r\n\r\n            map.loadImage(\r\n            'https://docs.mapbox.com/mapbox-gl-js/assets/custom_marker.png',\r\n            // Add an image to use as a custom marker\r\n            function(error, image) {\r\n                if (error) throw error;\r\n                map.addImage('custom-marker', image);\r\n             \r\n                map.addSource('places', {\r\n                    'type': 'geojson',\r\n                    'data': {\r\n                        'type': 'FeatureCollection',\r\n                        'features': [\r\n                            {\r\n                                'type': 'Feature',\r\n                                'properties': {\r\n                                    'description':\r\n                                        '<strong>Make it Mount Pleasant</strong><p>Make it Mount Pleasant is a handmade and vintage market and afternoon of live entertainment and kids activities. 12:00-6:00 p.m.</p>'\r\n                                    },\r\n                                'geometry': {\r\n                                    'type': 'Point',\r\n                                    'coordinates': [-77.038659, 38.931567]\r\n                                }\r\n                            },\r\n                    \r\n                        ]\r\n                    }\r\n                });\r\n             \r\n                // Add a layer showing the places.\r\n                map.addLayer({\r\n                    'id': 'places',\r\n                    'type': 'symbol',\r\n                    'source': 'places',\r\n                    'layout': {\r\n                        'icon-image': 'custom-marker',\r\n                        'icon-allow-overlap': true\r\n                    }\r\n                });\r\n\r\n                map.addSource('route', {\r\n                    'type': 'geojson',\r\n                    'data': {\r\n                        'type': 'Feature',\r\n                        'properties': {},\r\n                        'geometry': {\r\n                            'type': 'LineString',\r\n                            'coordinates': [\r\n                                [-122.48369693756104, 37.83381888486939],\r\n                                [-122.48348236083984, 37.83317489144141],\r\n                                [-122.48339653015138, 37.83270036637107],\r\n                                [-122.48356819152832, 37.832056363179625],\r\n                                [-122.48404026031496, 37.83114119107971],\r\n                                [-122.48404026031496, 37.83049717427869],\r\n                                [-122.48348236083984, 37.829920943955045],\r\n                                [-122.48356819152832, 37.82954808664175],\r\n                                [-122.48507022857666, 37.82944639795659],\r\n                                [-122.48610019683838, 37.82880236636284],\r\n                                [-122.48695850372314, 37.82931081282506],\r\n                                [-122.48700141906738, 37.83080223556934],\r\n                                [-122.48751640319824, 37.83168351665737],\r\n                                [-122.48803138732912, 37.832158048267786],\r\n                                [-122.48888969421387, 37.83297152392784],\r\n                                [-122.48987674713133, 37.83263257682617],\r\n                                [-122.49043464660643, 37.832937629287755],\r\n                                [-122.49125003814696, 37.832429207817725],\r\n                                [-122.49163627624512, 37.832564787218985],\r\n                                [-122.49223709106445, 37.83337825839438],\r\n                                [-122.49378204345702, 37.83368330777276]\r\n                            ]\r\n                        }\r\n                    }\r\n                });\r\n                \r\n                map.addLayer({\r\n                    'id': 'route',\r\n                    'type': 'line',\r\n                    'source': 'route',\r\n                    'layout': {\r\n                        'line-join': 'round',\r\n                        'line-cap': 'round'\r\n                    },\r\n                    'paint': {\r\n                        'line-color': '#888',\r\n                        'line-width': 8\r\n                    }\r\n                });\r\n\r\n            });\r\n             \r\n            // Create a popup, but don't add it to the map yet.\r\n            var popup = new mapboxgl.Popup({\r\n                closeButton: false,\r\n                closeOnClick: false\r\n            });\r\n             \r\n            map.on('mouseenter', 'places', function(e) {\r\n                // Change the cursor style as a UI indicator.\r\n                map.getCanvas().style.cursor = 'pointer';\r\n                \r\n                var coordinates = e.features[0].geometry.coordinates.slice();\r\n                var description = e.features[0].properties.description;\r\n                \r\n                // Ensure that if the map is zoomed out such that multiple\r\n                // copies of the feature are visible, the popup appears\r\n                // over the copy being pointed to.\r\n                while (Math.abs(e.lngLat.lng - coordinates[0]) > 180) {\r\n                    coordinates[0] += e.lngLat.lng > coordinates[0] ? 360 : -360;\r\n                }\r\n                \r\n                // Populate the popup and set its coordinates\r\n                // based on the feature found.\r\n                popup.setLngLat(coordinates).setHTML(description).addTo(map);\r\n            });\r\n             \r\n            map.on('mouseleave', 'places', function() {\r\n                map.getCanvas().style.cursor = '';\r\n                popup.remove();\r\n            });\r\n        });\r\n        \r\n        return(\r\n            <div style={{position:\"relative\",height:\"300px\", width:\"100%\"}}>\r\n                <div ref={el => this.mapContainer = el} style={{position:\"reletive\", width:\"inherit\", height:\"inherit\"}}/>\r\n            </div>\r\n            \r\n        )\r\n    }\r\n}\r\n\r\nexport default Maps"]},"metadata":{},"sourceType":"module"}