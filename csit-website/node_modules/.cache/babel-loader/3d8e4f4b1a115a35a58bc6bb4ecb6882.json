{"ast":null,"code":"var _jsxFileName = \"G:\\\\INTERNSHIPFILES\\\\CodingFolder\\\\csit-website\\\\src\\\\Components\\\\Tables\\\\Timeline\\\\TimelineTable.js\";\nimport React, { useRef } from 'react';\nimport * as rb from 'react-bootstrap';\nimport { BootstrapTable, TableHeaderColumn } from 'react-bootstrap-table';\nimport ProfileModal from '../ProfileModal';\nconst options = {\n  onRowClick: function (row) {// fetch(`http://localhost:8080/getProfile?IDs=${row.UID}`).then((r) => r.json()).then((data) => {that.databack(data)}).catch(err => {console.log(err)})\n  }\n};\n\nfunction columnClassNameFormat(fieldValue, row, rowIdx, colIdx) {\n  // fieldValue is column value\n  // row is whole row object\n  // rowIdx is index of row\n  // colIdx is index of column\n  // console.log(fieldValue)\n  return fieldValue > 30 ? 'td-column-function-even-example' : 'td-column-function-odd-example';\n}\n\nfunction TimelineTable(props) {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: props.display\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(BootstrapTable, {\n    data: props.tableprops,\n    options: options,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TableHeaderColumn, {\n    dataField: \"name\",\n    isKey: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 17\n    }\n  }, \"Name\"), /*#__PURE__*/React.createElement(TableHeaderColumn, {\n    dataField: \"datetime\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 17\n    }\n  }, \"Date and Time\"), /*#__PURE__*/React.createElement(TableHeaderColumn, {\n    dataField: \"intersection\",\n    columnClassName: columnClassNameFormat,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 17\n    }\n  }, \"Intersection Status\")));\n}\n\nexport default TimelineTable;","map":{"version":3,"sources":["G:/INTERNSHIPFILES/CodingFolder/csit-website/src/Components/Tables/Timeline/TimelineTable.js"],"names":["React","useRef","rb","BootstrapTable","TableHeaderColumn","ProfileModal","options","onRowClick","row","columnClassNameFormat","fieldValue","rowIdx","colIdx","TimelineTable","props","display","tableprops"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,MAAhB,QAA8B,OAA9B;AACA,OAAO,KAAKC,EAAZ,MAAoB,iBAApB;AACA,SAAQC,cAAR,EAAwBC,iBAAxB,QAAgD,uBAAhD;AACA,OAAOC,YAAP,MAAyB,iBAAzB;AAEA,MAAMC,OAAO,GAAG;AACZC,EAAAA,UAAU,EAAE,UAASC,GAAT,EAAc,CACtB;AACH;AAHW,CAAhB;;AAMA,SAASC,qBAAT,CAA+BC,UAA/B,EAA2CF,GAA3C,EAAgDG,MAAhD,EAAwDC,MAAxD,EAAgE;AAC5D;AACA;AACA;AACA;AACA;AACA,SAAOF,UAAU,GAAG,EAAb,GAAkB,iCAAlB,GAAsD,gCAA7D;AACH;;AAED,SAASG,aAAT,CAAuBC,KAAvB,EAA6B;AACzB,sBACI;AAAK,IAAA,KAAK,EAAE;AAACC,MAAAA,OAAO,EAACD,KAAK,CAACC;AAAf,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,cAAD;AAAgB,IAAA,IAAI,EAAGD,KAAK,CAACE,UAA7B;AAA0C,IAAA,OAAO,EAAGV,OAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,iBAAD;AAAmB,IAAA,SAAS,EAAC,MAA7B;AAAoC,IAAA,KAAK,MAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,oBAAC,iBAAD;AAAmB,IAAA,SAAS,EAAC,UAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAFJ,eAGI,oBAAC,iBAAD;AAAmB,IAAA,SAAS,EAAC,cAA7B;AAA4C,IAAA,eAAe,EAAGG,qBAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAHJ,CADJ,CADJ;AAUH;;AAED,eAAeI,aAAf","sourcesContent":["import React, { useRef } from 'react'\r\nimport * as rb from 'react-bootstrap'\r\nimport {BootstrapTable, TableHeaderColumn} from 'react-bootstrap-table';\r\nimport ProfileModal from '../ProfileModal'\r\n\r\nconst options = {\r\n    onRowClick: function(row) {\r\n        // fetch(`http://localhost:8080/getProfile?IDs=${row.UID}`).then((r) => r.json()).then((data) => {that.databack(data)}).catch(err => {console.log(err)})\r\n    }\r\n};\r\n\r\nfunction columnClassNameFormat(fieldValue, row, rowIdx, colIdx) {\r\n    // fieldValue is column value\r\n    // row is whole row object\r\n    // rowIdx is index of row\r\n    // colIdx is index of column\r\n    // console.log(fieldValue)\r\n    return fieldValue > 30 ? 'td-column-function-even-example' : 'td-column-function-odd-example';\r\n}\r\n\r\nfunction TimelineTable(props){\r\n    return(\r\n        <div style={{display:props.display}}>\r\n            <BootstrapTable data={ props.tableprops } options={ options }>\r\n                <TableHeaderColumn dataField='name' isKey>Name</TableHeaderColumn>\r\n                <TableHeaderColumn dataField='datetime'>Date and Time</TableHeaderColumn>\r\n                <TableHeaderColumn dataField='intersection' columnClassName={ columnClassNameFormat }>Intersection Status</TableHeaderColumn>\r\n                \r\n            </BootstrapTable>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TimelineTable"]},"metadata":{},"sourceType":"module"}