{"ast":null,"code":"var _jsxFileName = \"G:\\\\INTERNSHIPFILES\\\\CodingFolder\\\\csit-website\\\\src\\\\Components\\\\Navbar.js\";\nimport React, { useRef } from 'react';\nimport * as rb from 'react-bootstrap';\nimport { ReactComponent as Logo } from \"@svgr/webpack?-svgo,+titleProp,+ref!../Imgs/upload.svg\";\nimport Papa from 'papaparse';\nimport axios from 'axios';\nimport Graph from './Graphs';\nimport Table from './Table';\nimport ModalBody from './ModalBody'; // import Chip from '@material-ui/core/Chip';\n\nclass TopNavBar extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.myCallback = dataFromChild => {\n      console.log(dataFromChild);\n      this.setState({\n        CCID: dataFromChild\n      });\n    };\n\n    this.toCCClicked = () => {\n      let lists = [];\n      let IDs = []; // console.log(this.state.CCID)\n\n      this.state.datas.map(x => {\n        for (var data of this.state.CCID) {\n          // console.log(data)\n          if (x.peopleProfileId == data) {\n            lists.push(x);\n            IDs.push(x.peopleProfileId);\n          }\n        }\n      });\n      console.log(this.state.CCID);\n      this.setState({\n        CloseContacts: lists\n      });\n      this.setState({\n        CCID2: IDs\n      });\n    };\n\n    this.uploadFile = this.uploadFile.bind(this);\n    this.uploadFile2 = this.uploadFile2.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n    this.handleClick2 = this.handleClick2.bind(this);\n    this.state = {\n      dropDownValue: \"None\",\n      dataList: [\"None\"],\n      suspectCases: [],\n      movements: [],\n      error: false,\n      errorMsg: \"\",\n      showModal: false,\n      filenames: [],\n      series: {},\n      datas: [],\n      placename: \"\",\n      datetime: [],\n      showSelection: false,\n      CCID: [],\n      CloseContacts: [],\n      CCID2: []\n    };\n  }\n\n  importCompleted() {\n    const list = this.state;\n    this.props.handleData(list);\n    return;\n  }\n\n  handleClick(e) {\n    this.refs.fileUploader.click();\n  }\n\n  handleClick2(e) {\n    this.refs.fileUploader2.click();\n  }\n\n  uploadFile(event) {\n    const file = event.target.files[0];\n\n    if (file) {\n      if (file.name.includes(\"_suspected\")) {\n        this.setState({\n          filenames: [...this.state.filenames, file.name]\n        });\n        const reader = new FileReader();\n\n        reader.onload = () => {\n          // Use reader.result\n          const lols = Papa.parse(reader.result, {\n            header: true,\n            skipEmptyLines: true\n          });\n          console.log(lols.data); // Posting csv data into db\n          // this.postData('\"' + JSON.stringify(lols.data) + '\"')\n          // this.postSuspects(JSON.stringify(lols.data))\n          // Adds names into dropdown\n\n          this.setState({\n            dataList: [\"None\", ...lols.data.map(names => names.firstName + \" \" + names.lastName)]\n          });\n          const data = lols.data;\n          this.setState({\n            suspectCases: data\n          });\n        };\n\n        reader.readAsText(file);\n      } else {\n        this.setState({\n          error: true,\n          errorMsg: \"You have uploaded invalid files! Please rename the file to <filename>_suspected (For suspected cases)\"\n        });\n        return;\n      }\n    }\n  }\n\n  uploadFile2(event) {\n    const file = event.target.files[0];\n\n    if (file) {\n      if (file.name.includes(\"_movements\")) {\n        this.setState({\n          filenames: [...this.state.filenames, file.name]\n        });\n        const reader = new FileReader();\n\n        reader.onload = () => {\n          // Use reader.result\n          const lols = Papa.parse(reader.result, {\n            header: true,\n            skipEmptyLines: true\n          });\n          console.log(lols.data); // Posting csv data into db\n          // this.postData('\"' + JSON.stringify(lols.data) + '\"')\n          // this.postMovements(JSON.stringify(lols.data))\n\n          const data = lols.data;\n          this.setState({\n            movements: data\n          });\n        };\n\n        reader.readAsText(file);\n      } else {\n        this.setState({\n          error: true,\n          errorMsg: \"You have uploaded invalid files! Please rename the file to <filename>_movement (For suspected case movement)\"\n        });\n        return;\n      }\n    }\n  }\n\n  dropdownClicked(text) {\n    this.setState({\n      dropDownValue: text\n    });\n  }\n\n  convertDate(date) {\n    var lol = date;\n    var dateTimeParts = lol.split(' '); // console.log(dateTimeParts)\n\n    var dateParts = dateTimeParts[0].split('/');\n    var timeParts = dateTimeParts[1].split(':');\n    var timeOfDay = dateTimeParts[2];\n\n    if (timeOfDay === \"pm\") {\n      timeParts[0] += 12;\n    } // new Date(year, month, day, hours, minutes, seconds, milliseconds)\n\n\n    var finalDate = new Date(dateParts[2], dateParts[1] - 1, dateParts[0], timeParts[0], timeParts[1]); // console.log(finalDate)\n\n    return finalDate.getTime();\n  }\n\n  populateGraph1() {\n    let series2 = [];\n    this.state.suspectCases.forEach(suspect => {\n      let data = [];\n      this.state.movements.filter(moves => moves.suspectId === suspect.id).forEach(movement => {\n        data.push({\n          x: movement.locationShortaddress,\n          y: [this.convertDate(movement.datetimeEntered), this.convertDate(movement.datetimeLeft)]\n        });\n      });\n      series2.push({\n        name: suspect.firstName + \" \" + suspect.lastName,\n        data: data\n      });\n    });\n    return series2;\n  }\n\n  convertSQLDate(startDate1, endDate, type = undefined) {\n    if (startDate1 !== undefined && endDate !== undefined) {\n      var date = new Date(startDate1);\n      var date2 = date.toString().split(\" \");\n      var time = date2[4].split(\":\");\n      var date1 = new Date(endDate);\n      var date21 = date1.toString().split(\" \");\n      var time1 = date21[4].split(\":\");\n      let str;\n\n      if (type === \"header\") {\n        str = time[0] + \":\" + time[1] + \" - \" + time1[0] + \":\" + time1[1];\n      } else {\n        str = date2[2] + \" \" + date2[1] + \", \" + time[0] + \":\" + time[1] + \" - \" + time1[0] + \":\" + time1[1];\n      }\n\n      return str;\n    } // return date2[1]\n\n  } // Still kkeeps adding values to the list\n\n\n  render() {\n    let suspected = this.state.dataList.map(sus => /*#__PURE__*/React.createElement(rb.NavDropdown.Item, {\n      eventKey: Math.random(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 56\n      }\n    }, sus));\n    let displaySetting, displaySetting2, seriesdata;\n    let test;\n\n    if (this.state.suspectCases.length > 0 && this.state.movements.length > 0) {\n      displaySetting = \"none\";\n      displaySetting2 = \"block\";\n      test = this.populateGraph1();\n    } else {\n      displaySetting = \"block\";\n      displaySetting2 = \"none\";\n    }\n\n    let graph1, graph11;\n    const that = this;\n\n    if (test !== undefined) {\n      var options = {\n        options: {\n          chart: {\n            height: 450,\n            type: 'rangeBar',\n            events: {\n              dataPointSelection: function (event, chartContext, config) {\n                // Name of place\n                // console.log(test[config.seriesIndex].data[config.dataPointIndex].x)\n                that.setState({\n                  placename: test[config.seriesIndex].data[config.dataPointIndex].x,\n                  datetime: test[config.seriesIndex].data[config.dataPointIndex].y\n                }); // For the time\n                // console.log(test[config.seriesIndex].data[config.dataPointIndex].y)\n                // For the Name\n                // console.log(test[config.seriesIndex].name)\n\n                fetch(\"http://localhost:8080/getMovementForDate?placeName=\" + test[config.seriesIndex].data[config.dataPointIndex].x + \"&dates=\" + test[config.seriesIndex].data[config.dataPointIndex].y + \"&personName=\" + test[config.seriesIndex].name).then(response => response.json()).then(data => that.setState({\n                  datas: data\n                })).catch(err => {\n                  console.log(err);\n                });\n              }\n            }\n          },\n          plotOptions: {\n            bar: {\n              horizontal: true,\n              barHeight: '80%'\n            }\n          },\n          xaxis: {\n            type: 'datetime'\n          },\n          stroke: {\n            width: 1\n          },\n          fill: {\n            type: 'solid',\n            opacity: 0.6\n          },\n          legend: {\n            position: 'top',\n            horizontalAlign: 'left'\n          }\n        }\n      };\n      graph1 = /*#__PURE__*/React.createElement(Graph, {\n        display: displaySetting2,\n        options: options.options,\n        series: test,\n        tool: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 22\n        }\n      });\n    }\n\n    let mappingsCC = this.state.datas.filter(data => data.caseNumber != null).map(data => {\n      return {\n        caseNumber: data.caseNumber,\n        UID: data.peopleProfileId,\n        name: data.firstName + \" \" + data.lastName,\n        place: data.locationShortaddress,\n        datetime: this.convertSQLDate(data.datetimeEntered, data.datetimeLeft)\n      };\n    });\n    let mappingsPATP;\n\n    if (this.state.CloseContacts.length === 0) {\n      mappingsPATP = this.state.datas.filter(data => data.caseNumber == null).map(data => {\n        return {\n          UID: data.peopleProfileId,\n          name: data.firstName + \" \" + data.lastName,\n          place: data.locationShortaddress,\n          datetime: this.convertSQLDate(data.datetimeEntered, data.datetimeLeft)\n        };\n      });\n    } else {\n      mappingsPATP = this.state.datas.filter(data => data.caseNumber == null).filter(data => this.state.CCID2.includes(data.peopleProfileId) === false).map(data => {\n        return {\n          UID: data.peopleProfileId,\n          name: data.firstName + \" \" + data.lastName,\n          place: data.locationShortaddress,\n          datetime: this.convertSQLDate(data.datetimeEntered, data.datetimeLeft)\n        };\n      });\n    }\n\n    let mappingsclose = this.state.CloseContacts.map(data => {\n      return {\n        UID: data.peopleProfileId,\n        name: data.firstName + \" \" + data.lastName,\n        place: data.locationShortaddress,\n        datetime: this.convertSQLDate(data.datetimeEntered, data.datetimeLeft)\n      };\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(rb.Navbar, {\n      bg: \"white\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(rb.Navbar.Brand, {\n      style: {\n        fontSize: 30\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 25\n      }\n    }, \"Filter:\"), /*#__PURE__*/React.createElement(rb.Navbar.Toggle, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(rb.Nav, {\n      onSelect: eventKey => this.dropdownClicked(eventKey),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(rb.NavDropdown, {\n      title: this.state.dropDownValue,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 29\n      }\n    }, suspected)), /*#__PURE__*/React.createElement(rb.Navbar.Collapse, {\n      className: \"justify-content-end\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 337,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(rb.Button, {\n      className: \"text-right\",\n      id: \"importCases\",\n      style: {\n        textSize: 15\n      },\n      onClick: () => this.setState({\n        showModal: true\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Logo, {\n      style: {\n        width: 30,\n        height: 30,\n        paddingRight: 7.4\n      },\n      id: \"uploadLogo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 33\n      }\n    }), \"IMPORT SUSPECTED CASES\")))), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 353,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(rb.Modal, {\n      show: this.state.showModal,\n      onHide: () => this.setState({\n        showModal: false\n      }),\n      animation: false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 354,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(rb.Modal.Header, {\n      closeButton: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 355,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(rb.Modal.Title, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 356,\n        columnNumber: 29\n      }\n    }, \"Upload Suspect Cases Files\")), /*#__PURE__*/React.createElement(rb.Modal.Body, {\n      className: \"d-flex justify-content-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 359,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 361,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \".col-md-6\",\n      style: {\n        paddingRight: 15\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 362,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 363,\n        columnNumber: 37\n      }\n    }, \"Profile of suspected case\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 364,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 365,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(rb.Button, {\n      variant: \"secondary\",\n      style: {\n        width: \"100%\"\n      },\n      onClick: this.handleClick.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 366,\n        columnNumber: 37\n      }\n    }, \"Upload\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"file\",\n      id: \"file\",\n      ref: \"fileUploader\",\n      style: {\n        display: \"none\"\n      },\n      onChange: this.uploadFile,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 369,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 370,\n        columnNumber: 37\n      }\n    }, \"File Chosen: \")), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        borderLeft: \"2px dashed black\",\n        height: \"100px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 373,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \".col-md-6\",\n      variant: \"primary\",\n      style: {\n        paddingLeft: 15\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 375,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 376,\n        columnNumber: 37\n      }\n    }, \"Movement of suspected case\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 377,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 378,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(rb.Button, {\n      variant: \"secondary\",\n      style: {\n        width: \"100%\"\n      },\n      onClick: this.handleClick2.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 379,\n        columnNumber: 37\n      }\n    }, \"Upload\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"file\",\n      id: \"file2\",\n      ref: \"fileUploader2\",\n      style: {\n        display: \"none\"\n      },\n      onChange: this.uploadFile2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 382,\n        columnNumber: 37\n      }\n    })))))), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 389,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(rb.Toast, {\n      onClose: () => this.setState({\n        error: false\n      }),\n      show: this.state.error,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 390,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(rb.Toast.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 391,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"strong\", {\n      className: \"mr-auto\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 392,\n        columnNumber: 29\n      }\n    }, \"Error!\")), /*#__PURE__*/React.createElement(rb.Toast.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 395,\n        columnNumber: 25\n      }\n    }, this.state.errorMsg))), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 399,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        display: displaySetting,\n        height: \"100%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 403,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      style: {\n        color: \"#424761\",\n        textAlign: \"center\",\n        marginTop: \"15%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 404,\n        columnNumber: 21\n      }\n    }, \"Import some data to begin\")), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        display: displaySetting2\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 406,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        textAlign: \"left\",\n        height: \"100%\",\n        float: \"left\",\n        width: \"50%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 407,\n        columnNumber: 21\n      }\n    }, graph1), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        float: \"left\",\n        width: \"50%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 410,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(rb.Tabs, {\n      defaultActiveKey: \"home\",\n      id: \"uncontrolled-tab-example\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 411,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(rb.Tab, {\n      eventKey: \"home\",\n      title: \"CONFIRMED CASES\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 412,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        textAlign: \"left\",\n        height: \"100%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 413,\n        columnNumber: 33\n      }\n    }, this.state.placename, this.convertSQLDate(this.state.datetime[0], this.state.datetime[1], \"header\"), /*#__PURE__*/React.createElement(Table, {\n      tableprops: mappingsCC,\n      display: displaySetting2,\n      type: \"CC\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 419,\n        columnNumber: 37\n      }\n    }))), /*#__PURE__*/React.createElement(rb.Tab, {\n      eventKey: \"profile\",\n      title: \"CLOSE CONTACT\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 423,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        textAlign: \"left\",\n        height: \"100%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 424,\n        columnNumber: 29\n      }\n    }, this.state.placename, this.convertSQLDate(this.state.datetime[0], this.state.datetime[1], \"header\"), /*#__PURE__*/React.createElement(Table, {\n      tableprops: mappingsclose,\n      display: displaySetting2,\n      type: \"PATP\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 429,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 430,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(rb.Button, {\n      onClick: () => this.setState({\n        showSelection: true\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 431,\n        columnNumber: 37\n      }\n    }, \"Manual Import\"))), /*#__PURE__*/React.createElement(rb.Tab, {\n      eventKey: \"contact\",\n      title: \"PUBLIC AT THE PLACE\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 437,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        textAlign: \"left\",\n        height: \"100%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 438,\n        columnNumber: 33\n      }\n    }, this.state.placename, this.convertSQLDate(this.state.datetime[0], this.state.datetime[1], \"header\"), /*#__PURE__*/React.createElement(Table, {\n      tableprops: mappingsPATP,\n      display: displaySetting2,\n      type: \"PATP\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 443,\n        columnNumber: 37\n      }\n    }))))), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 449,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(rb.Modal, {\n      show: this.state.showSelection,\n      onHide: () => this.setState({\n        showSelection: false\n      }),\n      centered: true,\n      size: \"xl\",\n      scrollable: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 450,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(rb.Modal.Header, {\n      closeButton: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 451,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(rb.Modal.Title, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 452,\n        columnNumber: 33\n      }\n    }, \"Modal heading\")), /*#__PURE__*/React.createElement(rb.Modal.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 454,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        float: \"left\",\n        textAlign: \"center\",\n        width: \"40%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 455,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"text\", {\n      fontSize: \"20px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 456,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 456,\n        columnNumber: 59\n      }\n    }, \"Close Contact With Public\")), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        backgroundColor: \"#F9F9F9\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 457,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Table, {\n      tableprops: mappingsclose,\n      display: displaySetting2,\n      type: \"modal-edit\",\n      callbackFromParent: this.myCallback,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 458,\n        columnNumber: 41\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        float: \"left\",\n        textAlign: \"center\",\n        width: \"20%\",\n        alignItems: \"center\",\n        justifyContent: \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 461,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(rb.Button, {\n      onClick: this.toCCClicked,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 462,\n        columnNumber: 37\n      }\n    }, \" < < \"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"clearfix\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 463,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(rb.Button, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 464,\n        columnNumber: 37\n      }\n    }, \" > > \"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"clearfix\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 465,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(rb.Button, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 466,\n        columnNumber: 37\n      }\n    }, \" RESET \")), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        float: \"right\",\n        textAlign: \"center\",\n        width: \"40%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 468,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"text\", {\n      fontSize: \"20px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 469,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 469,\n        columnNumber: 59\n      }\n    }, \"Public At The Place\")), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        backgroundColor: \"#F9F9F9\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 470,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Table, {\n      tableprops: mappingsPATP,\n      display: displaySetting2,\n      type: \"modal-edit\",\n      callbackFromParent: this.myCallback,\n      data: [],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 471,\n        columnNumber: 41\n      }\n    })))), /*#__PURE__*/React.createElement(rb.Modal.Footer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 475,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(rb.Button, {\n      variant: \"secondary\",\n      onClick: () => this.setState({\n        showSelection: false\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 476,\n        columnNumber: 33\n      }\n    }, \"Close\"), /*#__PURE__*/React.createElement(rb.Button, {\n      variant: \"primary\",\n      onClick: () => this.setState({\n        showSelection: false\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 479,\n        columnNumber: 33\n      }\n    }, \"Save Changes\"))))));\n  }\n\n}\n\nexport default TopNavBar;","map":{"version":3,"sources":["G:/INTERNSHIPFILES/CodingFolder/csit-website/src/Components/Navbar.js"],"names":["React","useRef","rb","Papa","axios","Graph","Table","ModalBody","TopNavBar","Component","constructor","props","myCallback","dataFromChild","console","log","setState","CCID","toCCClicked","lists","IDs","state","datas","map","x","data","peopleProfileId","push","CloseContacts","CCID2","uploadFile","bind","uploadFile2","handleClick","handleClick2","dropDownValue","dataList","suspectCases","movements","error","errorMsg","showModal","filenames","series","placename","datetime","showSelection","importCompleted","list","handleData","e","refs","fileUploader","click","fileUploader2","event","file","target","files","name","includes","reader","FileReader","onload","lols","parse","result","header","skipEmptyLines","names","firstName","lastName","readAsText","dropdownClicked","text","convertDate","date","lol","dateTimeParts","split","dateParts","timeParts","timeOfDay","finalDate","Date","getTime","populateGraph1","series2","forEach","suspect","filter","moves","suspectId","id","movement","locationShortaddress","y","datetimeEntered","datetimeLeft","convertSQLDate","startDate1","endDate","type","undefined","date2","toString","time","date1","date21","time1","str","render","suspected","sus","Math","random","displaySetting","displaySetting2","seriesdata","test","length","graph1","graph11","that","options","chart","height","events","dataPointSelection","chartContext","config","seriesIndex","dataPointIndex","fetch","then","response","json","catch","err","plotOptions","bar","horizontal","barHeight","xaxis","stroke","width","fill","opacity","legend","position","horizontalAlign","mappingsCC","caseNumber","UID","place","mappingsPATP","mappingsclose","fontSize","eventKey","textSize","paddingRight","display","borderLeft","paddingLeft","color","textAlign","marginTop","float","backgroundColor","alignItems","justifyContent"],"mappings":"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","sourcesContent":["import React, { useRef } from 'react'\r\nimport * as rb from 'react-bootstrap'\r\nimport {ReactComponent as Logo} from '../Imgs/upload.svg'\r\nimport Papa from 'papaparse'\r\nimport axios from 'axios'\r\nimport Graph from './Graphs'\r\nimport Table from './Table'\r\nimport ModalBody from './ModalBody'\r\n// import Chip from '@material-ui/core/Chip';\r\n\r\n\r\nclass TopNavBar extends React.Component{\r\n\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.uploadFile = this.uploadFile.bind(this);\r\n        this.uploadFile2 = this.uploadFile2.bind(this);\r\n        this.handleClick = this.handleClick.bind(this);\r\n        this.handleClick2 = this.handleClick2.bind(this);\r\n        this.state = {\r\n            dropDownValue: \"None\",\r\n            dataList: [\"None\"],\r\n            suspectCases: [],\r\n            movements: [],\r\n            error: false,\r\n            errorMsg: \"\",\r\n            showModal: false,\r\n            filenames: [],\r\n            series:{},\r\n            datas:[],\r\n            placename:\"\",\r\n            datetime:[],\r\n            showSelection: false,\r\n            CCID:[],\r\n            CloseContacts:[],\r\n            CCID2:[],\r\n\r\n        }\r\n    }\r\n\r\n    importCompleted(){\r\n        const list = this.state\r\n        this.props.handleData(list)\r\n        return\r\n    }\r\n\r\n    handleClick(e) {\r\n        this.refs.fileUploader.click();\r\n    }\r\n\r\n    handleClick2(e) {\r\n        this.refs.fileUploader2.click();\r\n    }\r\n\r\n    uploadFile(event) {\r\n        \r\n        const file = event.target.files[0]\r\n\r\n        if(file){\r\n            if (file.name.includes(\"_suspected\")){\r\n\r\n                this.setState({filenames:[...this.state.filenames, file.name]})\r\n                const reader = new FileReader();\r\n                reader.onload = () => {\r\n                    // Use reader.result\r\n                    const lols = Papa.parse(reader.result, {header: true, skipEmptyLines: true}, )\r\n                    \r\n                    console.log(lols.data)\r\n    \r\n                    // Posting csv data into db\r\n                    // this.postData('\"' + JSON.stringify(lols.data) + '\"')\r\n                    // this.postSuspects(JSON.stringify(lols.data))\r\n    \r\n                    // Adds names into dropdown\r\n                    this.setState({dataList: [\"None\", ...lols.data.map(names => names.firstName + \" \" + names.lastName)]})\r\n    \r\n                    const data = lols.data\r\n                    this.setState({suspectCases: data})\r\n                }\r\n                reader.readAsText(file)\r\n            }\r\n            else{\r\n                this.setState({error:true, errorMsg:\"You have uploaded invalid files! Please rename the file to <filename>_suspected (For suspected cases)\"})\r\n                return\r\n            }\r\n        }\r\n    }\r\n\r\n    uploadFile2(event) {\r\n        \r\n        const file = event.target.files[0]\r\n\r\n        if(file){\r\n            if (file.name.includes(\"_movements\")){\r\n                \r\n                this.setState({filenames:[...this.state.filenames, file.name]})\r\n                const reader = new FileReader();\r\n                reader.onload = () => {\r\n                    // Use reader.result\r\n                    const lols = Papa.parse(reader.result, {header: true, skipEmptyLines: true}, )\r\n                    \r\n                    console.log(lols.data)\r\n    \r\n                    // Posting csv data into db\r\n                    // this.postData('\"' + JSON.stringify(lols.data) + '\"')\r\n                    // this.postMovements(JSON.stringify(lols.data))\r\n                    const data = lols.data\r\n                    this.setState({movements: data})\r\n                }\r\n                reader.readAsText(file)\r\n            }\r\n            else{\r\n                this.setState({error:true, errorMsg:\"You have uploaded invalid files! Please rename the file to <filename>_movement (For suspected case movement)\"})\r\n                return\r\n            }\r\n        }\r\n    }\r\n\r\n    dropdownClicked(text) {\r\n        this.setState({dropDownValue: text})\r\n    }\r\n\r\n    convertDate(date) {\r\n\r\n        var lol = date\r\n        var dateTimeParts = lol.split(' ')\r\n        // console.log(dateTimeParts)\r\n        var dateParts = dateTimeParts[0].split('/')\r\n        var timeParts = dateTimeParts[1].split(':')\r\n        var timeOfDay = dateTimeParts[2]\r\n        if(timeOfDay === \"pm\"){\r\n            timeParts[0] += 12\r\n        }\r\n\r\n        // new Date(year, month, day, hours, minutes, seconds, milliseconds)\r\n        var finalDate = new Date(dateParts[2], dateParts[1] - 1, dateParts[0], timeParts[0], timeParts[1]);\r\n        // console.log(finalDate)\r\n        return finalDate.getTime();\r\n    }\r\n\r\n    populateGraph1(){\r\n        let series2 = []\r\n        this.state.suspectCases.forEach(suspect => {\r\n            let data = []\r\n\r\n            this.state.movements.filter(moves => moves.suspectId === suspect.id).forEach(movement => {\r\n                data.push(\r\n                    {\r\n                        x: movement.locationShortaddress,\r\n                        y: [this.convertDate(movement.datetimeEntered),this.convertDate(movement.datetimeLeft)]\r\n                    }\r\n                )\r\n            })\r\n\r\n            series2.push(\r\n                {\r\n                    name: suspect.firstName + \" \" + suspect.lastName,\r\n                    data: data\r\n                }\r\n            )\r\n        })\r\n        return series2\r\n    }\r\n\r\n    convertSQLDate(startDate1, endDate, type = undefined){\r\n        \r\n        if(startDate1 !== undefined && endDate !== undefined){\r\n            var date = new Date(startDate1)\r\n            var date2 = date.toString().split(\" \")\r\n            var time = date2[4].split(\":\")\r\n    \r\n            var date1 = new Date(endDate)\r\n            var date21 = date1.toString().split(\" \")\r\n            var time1 = date21[4].split(\":\")\r\n            \r\n            let str\r\n            if(type === \"header\"){\r\n                str = time[0] + \":\"+ time[1] + \" - \" + time1[0] + \":\" + time1[1]\r\n            }\r\n            else{\r\n                str = date2[2] + \" \" + date2[1] + \", \" + time[0] + \":\"+ time[1] + \" - \" + time1[0] + \":\" + time1[1]\r\n            }\r\n           \r\n            return str\r\n        }\r\n        // return date2[1]\r\n    }\r\n\r\n    // Still kkeeps adding values to the list\r\n    myCallback = (dataFromChild) => {\r\n        console.log(dataFromChild)\r\n        this.setState({CCID:dataFromChild})\r\n    }\r\n\r\n    toCCClicked = () => {\r\n        let lists = []\r\n        let IDs = []\r\n        // console.log(this.state.CCID)\r\n        this.state.datas.map(x => {\r\n            for(var data of this.state.CCID){\r\n\r\n                // console.log(data)\r\n                if(x.peopleProfileId == data){\r\n                    lists.push(x)\r\n                    IDs.push(x.peopleProfileId)\r\n                }\r\n            }\r\n            \r\n        })\r\n        console.log(this.state.CCID)\r\n        \r\n        this.setState({CloseContacts:lists}) \r\n        this.setState({CCID2:IDs})\r\n    }\r\n\r\n    render() {\r\n\r\n        let suspected = this.state.dataList.map(sus => <rb.NavDropdown.Item eventKey={Math.random()}>{sus}</rb.NavDropdown.Item>)\r\n        \r\n        let displaySetting, displaySetting2, seriesdata\r\n        let test\r\n\r\n        if(this.state.suspectCases.length > 0 && this.state.movements.length > 0 ){\r\n            displaySetting = \"none\"\r\n            displaySetting2 = \"block\"\r\n            \r\n            test = this.populateGraph1()\r\n        }\r\n        else{\r\n            displaySetting = \"block\"\r\n            displaySetting2 = \"none\"\r\n        }\r\n        \r\n        let graph1, graph11\r\n\r\n        const that = this;\r\n\r\n        if(test !== undefined){\r\n            var options = {\r\n                options: {\r\n                    chart: {\r\n                        height: 450, \r\n                        type: 'rangeBar',\r\n                        events:{\r\n                            dataPointSelection: function(event, chartContext, config) {\r\n                                // Name of place\r\n                                // console.log(test[config.seriesIndex].data[config.dataPointIndex].x)\r\n\r\n                                that.setState({placename:test[config.seriesIndex].data[config.dataPointIndex].x, datetime:test[config.seriesIndex].data[config.dataPointIndex].y})\r\n\r\n                                // For the time\r\n                                // console.log(test[config.seriesIndex].data[config.dataPointIndex].y)\r\n                                // For the Name\r\n                                // console.log(test[config.seriesIndex].name)\r\n                                fetch(\"http://localhost:8080/getMovementForDate?placeName=\"+ test[config.seriesIndex].data[config.dataPointIndex].x +\"&dates=\" + test[config.seriesIndex].data[config.dataPointIndex].y + \"&personName=\" + test[config.seriesIndex].name)\r\n                                .then(response => response.json()).then(data => that.setState({datas:data})).catch(err => {console.log(err);});\r\n                            }\r\n                        }\r\n                    },\r\n                    plotOptions: {\r\n                      bar: {horizontal: true, barHeight: '80%'}\r\n                    },\r\n                    xaxis: {\r\n                      type: 'datetime'\r\n                    },\r\n                    stroke: {\r\n                      width: 1\r\n                    },\r\n                    fill: {\r\n                      type: 'solid',\r\n                      opacity: 0.6\r\n                    },\r\n                    legend: {\r\n                      position: 'top',\r\n                      horizontalAlign: 'left'\r\n                    }\r\n                }\r\n            }\r\n            graph1 = <Graph display={displaySetting2} options={options.options} series={test} tool/>\r\n        }\r\n\r\n        let mappingsCC = this.state.datas.filter(data => data.caseNumber != null).map(data => {\r\n            return({\r\n                caseNumber:data.caseNumber,\r\n                UID:data.peopleProfileId,\r\n                name:data.firstName + \" \" + data.lastName,\r\n                place:data.locationShortaddress,\r\n                datetime:this.convertSQLDate(data.datetimeEntered, data.datetimeLeft)\r\n            })\r\n        })\r\n        \r\n        let mappingsPATP\r\n        if(this.state.CloseContacts.length === 0){\r\n            mappingsPATP = this.state.datas.filter(data => data.caseNumber == null).map(data =>{\r\n                return({\r\n                    UID:data.peopleProfileId,\r\n                    name:data.firstName + \" \" + data.lastName,\r\n                    place:data.locationShortaddress,\r\n                    datetime:this.convertSQLDate(data.datetimeEntered, data.datetimeLeft)\r\n                })\r\n            })\r\n        }\r\n        else{\r\n            mappingsPATP = this.state.datas.filter(data => data.caseNumber == null).filter(data => this.state.CCID2.includes(data.peopleProfileId) === false).map(data =>{ \r\n                return({\r\n                    UID:data.peopleProfileId,\r\n                    name:data.firstName + \" \" + data.lastName,\r\n                    place:data.locationShortaddress,\r\n                    datetime:this.convertSQLDate(data.datetimeEntered, data.datetimeLeft)\r\n                })               \r\n            })\r\n        }\r\n\r\n        let mappingsclose = this.state.CloseContacts.map(data =>{\r\n            return({\r\n                UID:data.peopleProfileId,\r\n                name:data.firstName + \" \" + data.lastName,\r\n                place:data.locationShortaddress,\r\n                datetime:this.convertSQLDate(data.datetimeEntered, data.datetimeLeft)\r\n            })\r\n        })\r\n\r\n        return (\r\n            <div>\r\n                <div>\r\n                    <rb.Navbar bg=\"white\">\r\n                        <rb.Navbar.Brand style={{fontSize:30}}>\r\n                            Filter:\r\n                        </rb.Navbar.Brand>\r\n                        <rb.Navbar.Toggle />\r\n                        <rb.Nav onSelect={(eventKey) => this.dropdownClicked(eventKey)}>\r\n                            <rb.NavDropdown title={this.state.dropDownValue}>\r\n                                {suspected}\r\n                            </rb.NavDropdown>\r\n                        </rb.Nav>\r\n                        <rb.Navbar.Collapse className=\"justify-content-end\">\r\n\r\n                            <rb.Button className=\"text-right\" id=\"importCases\" style={{textSize:15}} onClick={() => this.setState({showModal: true})}>\r\n                                <Logo style={{width:30, height:30, paddingRight:7.4}} id=\"uploadLogo\"/>\r\n                                IMPORT SUSPECTED CASES\r\n                            </rb.Button>\r\n\r\n                            {/* <rb.Button className=\"text-right\" id=\"importCases\" style={{textSize:15}} onClick={this.handleClick.bind(this)}>\r\n                                <Logo style={{width:30, height:30, paddingRight:7.4}} id=\"uploadLogo\"/>\r\n                                IMPORT SUSPECTED CASES\r\n                            </rb.Button>\r\n                            <input type=\"file\" id=\"file\" ref=\"fileUploader\" style={{display: \"none\"}} onChange={this.uploadFile} multiple/> */}\r\n                        </rb.Navbar.Collapse>\r\n                    </rb.Navbar>\r\n                </div>\r\n                \r\n                <div>\r\n                    <rb.Modal show={this.state.showModal} onHide={() => this.setState({showModal: false}) } animation={false}>\r\n                        <rb.Modal.Header closeButton>\r\n                            <rb.Modal.Title>Upload Suspect Cases Files</rb.Modal.Title>\r\n                        </rb.Modal.Header>\r\n\r\n                        <rb.Modal.Body className=\"d-flex justify-content-center\">\r\n\r\n                            <div className=\"row\" >\r\n                                <div className=\".col-md-6\" style={{paddingRight: 15}}>\r\n                                    <b>Profile of suspected case</b>\r\n                                    <br/>\r\n                                    <br/>\r\n                                    <rb.Button variant=\"secondary\" style={{width:\"100%\"}} onClick={this.handleClick.bind(this)}>\r\n                                        Upload\r\n                                    </rb.Button>\r\n                                    <input type=\"file\" id=\"file\" ref=\"fileUploader\" style={{display: \"none\"}} onChange={this.uploadFile}/>\r\n                                    <p>File Chosen: </p>\r\n                                </div>\r\n\r\n                                <div style ={{borderLeft: \"2px dashed black\", height: \"100px\"}}></div>\r\n\r\n                                <div className=\".col-md-6\" variant=\"primary\" style={{paddingLeft: 15}}>\r\n                                    <b>Movement of suspected case</b>\r\n                                    <br/>\r\n                                    <br/>\r\n                                    <rb.Button variant=\"secondary\" style={{width:\"100%\"}} onClick={this.handleClick2.bind(this)}>\r\n                                        Upload\r\n                                    </rb.Button>\r\n                                    <input type=\"file\" id=\"file2\" ref=\"fileUploader2\" style={{display: \"none\"}} onChange={this.uploadFile2}/>\r\n                                </div>\r\n                            </div>\r\n                        </rb.Modal.Body>\r\n                    </rb.Modal>\r\n                </div>\r\n\r\n                <div>\r\n                    <rb.Toast onClose={() => this.setState({error: false})} show={this.state.error}>\r\n                        <rb.Toast.Header>\r\n                            <strong className=\"mr-auto\">Error!</strong>\r\n                            {/* <small>11 mins ago</small> */}\r\n                        </rb.Toast.Header>\r\n                        <rb.Toast.Body>{this.state.errorMsg}</rb.Toast.Body>\r\n                    </rb.Toast>\r\n                </div>\r\n                \r\n                <div>\r\n                    {/* {this.state.suspectCases} */}\r\n                </div>\r\n\r\n                <div style={{display:displaySetting, height:\"100%\"}}>\r\n                    <h1 style={{color:\"#424761\", textAlign:\"center\", marginTop:\"15%\"}}>Import some data to begin</h1>\r\n                </div>\r\n                <div style={{display:displaySetting2}}>\r\n                    <div style={{textAlign: \"left\", height:\"100%\", float:\"left\", width:\"50%\"}}>\r\n                        {graph1}\r\n                    </div>\r\n                    <div style={{float:\"left\", width:\"50%\"}}>\r\n                        <rb.Tabs defaultActiveKey=\"home\" id=\"uncontrolled-tab-example\">\r\n                            <rb.Tab eventKey=\"home\" title=\"CONFIRMED CASES\">\r\n                                <div style={{textAlign: \"left\", height:\"100%\"}}>\r\n                                    {/* <Chip label=\"Basic\" /> */}\r\n                                    {/* PlaceName */}\r\n                                    {this.state.placename}\r\n                                    {/* Time Span */}\r\n                                    {this.convertSQLDate(this.state.datetime[0], this.state.datetime[1], \"header\")}\r\n                                    <Table tableprops={mappingsCC} display={displaySetting2} type = \"CC\"/>\r\n                                </div>\r\n                            </rb.Tab>\r\n\r\n                            <rb.Tab eventKey=\"profile\" title=\"CLOSE CONTACT\">\r\n                            <div style={{textAlign: \"left\", height:\"100%\"}}>\r\n                                    {/* PlaceName */}\r\n                                    {this.state.placename}\r\n                                    {/* Time Span */}\r\n                                    {this.convertSQLDate(this.state.datetime[0], this.state.datetime[1], \"header\")}\r\n                                    <Table tableprops={mappingsclose} display={displaySetting2} type=\"PATP\" />\r\n                                    <br/>\r\n                                    <rb.Button onClick={() => this.setState({showSelection:true})}>\r\n                                        Manual Import\r\n                                    </rb.Button>\r\n                                </div>\r\n                            </rb.Tab>\r\n\r\n                            <rb.Tab eventKey=\"contact\" title=\"PUBLIC AT THE PLACE\">\r\n                                <div style={{textAlign: \"left\", height:\"100%\"}}>\r\n                                    {/* PlaceName */}\r\n                                    {this.state.placename}\r\n                                    {/* Time Span */}\r\n                                    {this.convertSQLDate(this.state.datetime[0], this.state.datetime[1], \"header\")}\r\n                                    <Table tableprops={mappingsPATP} display={displaySetting2} type=\"PATP\"/>\r\n                                </div>\r\n                            </rb.Tab>\r\n                        </rb.Tabs>         \r\n                    </div>\r\n\r\n                    <div>\r\n                        <rb.Modal show={this.state.showSelection} onHide={()=>this.setState({showSelection:false})} centered size=\"xl\" scrollable={true}>\r\n                            <rb.Modal.Header closeButton>\r\n                                <rb.Modal.Title>Modal heading</rb.Modal.Title>\r\n                            </rb.Modal.Header>\r\n                            <rb.Modal.Body>\r\n                                <div style={{float:\"left\", textAlign:\"center\", width:\"40%\"}}>\r\n                                    <text fontSize=\"20px\"><b>Close Contact With Public</b></text>\r\n                                    <div style={{backgroundColor:\"#F9F9F9\", }}>\r\n                                        <Table tableprops={mappingsclose} display={displaySetting2} type=\"modal-edit\" callbackFromParent={this.myCallback}/>\r\n                                    </div>\r\n                                </div>\r\n                                <div style={{float:\"left\", textAlign:\"center\", width:\"20%\", alignItems:\"center\", justifyContent:\"center\"}}>\r\n                                    <rb.Button onClick={this.toCCClicked}> &lt; &lt; </rb.Button>\r\n                                    <div className=\"clearfix\"></div>\r\n                                    <rb.Button> &gt; &gt; </rb.Button>\r\n                                    <div className=\"clearfix\"></div>\r\n                                    <rb.Button> RESET </rb.Button>\r\n                                </div>\r\n                                <div style={{float:\"right\", textAlign:\"center\", width:\"40%\"}}>\r\n                                    <text fontSize=\"20px\"><b>Public At The Place</b></text>\r\n                                    <div style={{backgroundColor:\"#F9F9F9\"}}>\r\n                                        <Table tableprops={mappingsPATP} display={displaySetting2} type=\"modal-edit\" callbackFromParent={this.myCallback} data={[]}/>\r\n                                    </div>\r\n                                </div>\r\n                            </rb.Modal.Body>\r\n                            <rb.Modal.Footer>\r\n                                <rb.Button variant=\"secondary\" onClick={()=>this.setState({showSelection:false})}>\r\n                                    Close\r\n                                </rb.Button>\r\n                                <rb.Button variant=\"primary\" onClick={()=>this.setState({showSelection:false})}>\r\n                                    Save Changes\r\n                                </rb.Button>\r\n                            </rb.Modal.Footer>\r\n                        </rb.Modal>\r\n                    </div>\r\n                    \r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default TopNavBar"]},"metadata":{},"sourceType":"module"}